// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: racecarweb/lctmanager/v1/linked_context_token.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// LinkedContextToken defines the LinkedContextToken message.
type LinkedContextToken struct {
	LctId              string `protobuf:"bytes,1,opt,name=lct_id,json=lctId,proto3" json:"lct_id,omitempty"`
	ComponentAId       string `protobuf:"bytes,2,opt,name=component_a_id,json=componentAId,proto3" json:"component_a_id,omitempty"`
	ComponentBId       string `protobuf:"bytes,3,opt,name=component_b_id,json=componentBId,proto3" json:"component_b_id,omitempty"`
	LctKeyHalf         string `protobuf:"bytes,4,opt,name=lct_key_half,json=lctKeyHalf,proto3" json:"lct_key_half,omitempty"`
	PairingStatus      string `protobuf:"bytes,5,opt,name=pairing_status,json=pairingStatus,proto3" json:"pairing_status,omitempty"`
	CreatedAt          int64  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          int64  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LastContactAt      int64  `protobuf:"varint,8,opt,name=last_contact_at,json=lastContactAt,proto3" json:"last_contact_at,omitempty"`
	TrustAnchor        string `protobuf:"bytes,9,opt,name=trust_anchor,json=trustAnchor,proto3" json:"trust_anchor,omitempty"`
	OperationalContext string `protobuf:"bytes,10,opt,name=operational_context,json=operationalContext,proto3" json:"operational_context,omitempty"`
	ProxyComponentId   string `protobuf:"bytes,11,opt,name=proxy_component_id,json=proxyComponentId,proto3" json:"proxy_component_id,omitempty"`
	AuthorizationRules string `protobuf:"bytes,12,opt,name=authorization_rules,json=authorizationRules,proto3" json:"authorization_rules,omitempty"`
}

func (m *LinkedContextToken) Reset()         { *m = LinkedContextToken{} }
func (m *LinkedContextToken) String() string { return proto.CompactTextString(m) }
func (*LinkedContextToken) ProtoMessage()    {}
func (*LinkedContextToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_d00ca07b1ba54bc2, []int{0}
}
func (m *LinkedContextToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LinkedContextToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LinkedContextToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LinkedContextToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkedContextToken.Merge(m, src)
}
func (m *LinkedContextToken) XXX_Size() int {
	return m.Size()
}
func (m *LinkedContextToken) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkedContextToken.DiscardUnknown(m)
}

var xxx_messageInfo_LinkedContextToken proto.InternalMessageInfo

func (m *LinkedContextToken) GetLctId() string {
	if m != nil {
		return m.LctId
	}
	return ""
}

func (m *LinkedContextToken) GetComponentAId() string {
	if m != nil {
		return m.ComponentAId
	}
	return ""
}

func (m *LinkedContextToken) GetComponentBId() string {
	if m != nil {
		return m.ComponentBId
	}
	return ""
}

func (m *LinkedContextToken) GetLctKeyHalf() string {
	if m != nil {
		return m.LctKeyHalf
	}
	return ""
}

func (m *LinkedContextToken) GetPairingStatus() string {
	if m != nil {
		return m.PairingStatus
	}
	return ""
}

func (m *LinkedContextToken) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *LinkedContextToken) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *LinkedContextToken) GetLastContactAt() int64 {
	if m != nil {
		return m.LastContactAt
	}
	return 0
}

func (m *LinkedContextToken) GetTrustAnchor() string {
	if m != nil {
		return m.TrustAnchor
	}
	return ""
}

func (m *LinkedContextToken) GetOperationalContext() string {
	if m != nil {
		return m.OperationalContext
	}
	return ""
}

func (m *LinkedContextToken) GetProxyComponentId() string {
	if m != nil {
		return m.ProxyComponentId
	}
	return ""
}

func (m *LinkedContextToken) GetAuthorizationRules() string {
	if m != nil {
		return m.AuthorizationRules
	}
	return ""
}

func init() {
	proto.RegisterType((*LinkedContextToken)(nil), "racecarweb.lctmanager.v1.LinkedContextToken")
}

func init() {
	proto.RegisterFile("racecarweb/lctmanager/v1/linked_context_token.proto", fileDescriptor_d00ca07b1ba54bc2)
}

var fileDescriptor_d00ca07b1ba54bc2 = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x31, 0x8f, 0xd3, 0x30,
	0x14, 0xc7, 0x1b, 0xca, 0x15, 0xea, 0xcb, 0x1d, 0xc8, 0x08, 0xc9, 0x0b, 0x51, 0x41, 0x80, 0x6e,
	0x80, 0x46, 0xa7, 0x5b, 0x58, 0x73, 0x5d, 0xa8, 0x60, 0x2a, 0x4c, 0x2c, 0xd6, 0xab, 0xed, 0x6b,
	0xa3, 0xba, 0x76, 0xe4, 0xbc, 0x94, 0x86, 0x4f, 0xc1, 0xc7, 0x62, 0xec, 0x08, 0x1b, 0x6a, 0xbf,
	0x08, 0xb2, 0x93, 0xd2, 0x5e, 0xd7, 0xff, 0xef, 0xf7, 0x7f, 0x89, 0x9e, 0x1f, 0xb9, 0x71, 0x20,
	0x94, 0x00, 0xf7, 0x5d, 0x4d, 0x53, 0x2d, 0x70, 0x09, 0x06, 0x66, 0xca, 0xa5, 0xab, 0xeb, 0x54,
	0xe7, 0x66, 0xa1, 0x24, 0x17, 0xd6, 0xa0, 0x5a, 0x23, 0x47, 0xbb, 0x50, 0x66, 0x58, 0x38, 0x8b,
	0x96, 0xb2, 0x43, 0x69, 0x78, 0x28, 0x0d, 0x57, 0xd7, 0xaf, 0xfe, 0x74, 0x09, 0xfd, 0x1c, 0x8a,
	0xa3, 0xa6, 0xf7, 0xd5, 0xd7, 0xe8, 0x73, 0xd2, 0xd3, 0x02, 0x79, 0x2e, 0x59, 0x34, 0x88, 0xae,
	0xfa, 0x93, 0x33, 0x2d, 0x70, 0x2c, 0xe9, 0x6b, 0x72, 0x29, 0xec, 0xb2, 0xb0, 0x46, 0x19, 0xe4,
	0xe0, 0xf1, 0x83, 0x80, 0xe3, 0xff, 0x69, 0x76, 0x6a, 0x4d, 0xbd, 0xd5, 0x3d, 0xb1, 0x6e, 0xc7,
	0x92, 0x0e, 0x48, 0xec, 0x3f, 0xb1, 0x50, 0x35, 0x9f, 0x83, 0xbe, 0x63, 0x0f, 0x83, 0x43, 0xb4,
	0xc0, 0x4f, 0xaa, 0xfe, 0x08, 0xfa, 0x8e, 0xbe, 0x21, 0x97, 0x05, 0xe4, 0x2e, 0x37, 0x33, 0x5e,
	0x22, 0x60, 0x55, 0xb2, 0xb3, 0xe0, 0x5c, 0xb4, 0xe9, 0x97, 0x10, 0xd2, 0x17, 0x84, 0x08, 0xa7,
	0x00, 0x95, 0xe4, 0x80, 0xac, 0x37, 0x88, 0xae, 0xba, 0x93, 0x7e, 0x9b, 0x64, 0xe8, 0x71, 0x55,
	0xc8, 0x3d, 0x7e, 0xd4, 0xe0, 0x36, 0xc9, 0x90, 0xbe, 0x25, 0x4f, 0x34, 0x94, 0x18, 0xd6, 0x06,
	0x02, 0xbd, 0xf3, 0x38, 0x38, 0x17, 0x3e, 0x1e, 0x35, 0x69, 0x86, 0xf4, 0x25, 0x89, 0xd1, 0x55,
	0x25, 0x72, 0x30, 0x62, 0x6e, 0x1d, 0xeb, 0x87, 0x5f, 0x39, 0x0f, 0x59, 0x16, 0x22, 0x9a, 0x92,
	0x67, 0xb6, 0x50, 0x0e, 0x30, 0xb7, 0x06, 0xf4, 0xfe, 0x21, 0x18, 0x09, 0x26, 0x3d, 0x42, 0xed,
	0xaa, 0xe9, 0x3b, 0x42, 0x0b, 0x67, 0xd7, 0x35, 0x3f, 0xac, 0x2b, 0x97, 0xec, 0x3c, 0xf8, 0x4f,
	0x03, 0x19, 0xed, 0xc1, 0x58, 0xfa, 0xf1, 0x50, 0xe1, 0xdc, 0xba, 0xfc, 0x47, 0x98, 0xc3, 0x5d,
	0xa5, 0x55, 0xc9, 0xe2, 0x66, 0xfc, 0x3d, 0x34, 0xf1, 0xe4, 0xf6, 0xc3, 0xaf, 0x6d, 0x12, 0x6d,
	0xb6, 0x49, 0xf4, 0x77, 0x9b, 0x44, 0x3f, 0x77, 0x49, 0x67, 0xb3, 0x4b, 0x3a, 0xbf, 0x77, 0x49,
	0xe7, 0x5b, 0xd2, 0xde, 0xc3, 0x7b, 0x7f, 0x45, 0xeb, 0xe3, 0x3b, 0xc2, 0xba, 0x50, 0xe5, 0xb4,
	0x17, 0xce, 0xe6, 0xe6, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x39, 0x6c, 0x1c, 0x6d, 0x02,
	0x00, 0x00,
}

func (m *LinkedContextToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LinkedContextToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LinkedContextToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AuthorizationRules) > 0 {
		i -= len(m.AuthorizationRules)
		copy(dAtA[i:], m.AuthorizationRules)
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(len(m.AuthorizationRules)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.ProxyComponentId) > 0 {
		i -= len(m.ProxyComponentId)
		copy(dAtA[i:], m.ProxyComponentId)
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(len(m.ProxyComponentId)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.OperationalContext) > 0 {
		i -= len(m.OperationalContext)
		copy(dAtA[i:], m.OperationalContext)
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(len(m.OperationalContext)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.TrustAnchor) > 0 {
		i -= len(m.TrustAnchor)
		copy(dAtA[i:], m.TrustAnchor)
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(len(m.TrustAnchor)))
		i--
		dAtA[i] = 0x4a
	}
	if m.LastContactAt != 0 {
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(m.LastContactAt))
		i--
		dAtA[i] = 0x40
	}
	if m.UpdatedAt != 0 {
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(m.UpdatedAt))
		i--
		dAtA[i] = 0x38
	}
	if m.CreatedAt != 0 {
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x30
	}
	if len(m.PairingStatus) > 0 {
		i -= len(m.PairingStatus)
		copy(dAtA[i:], m.PairingStatus)
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(len(m.PairingStatus)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.LctKeyHalf) > 0 {
		i -= len(m.LctKeyHalf)
		copy(dAtA[i:], m.LctKeyHalf)
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(len(m.LctKeyHalf)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ComponentBId) > 0 {
		i -= len(m.ComponentBId)
		copy(dAtA[i:], m.ComponentBId)
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(len(m.ComponentBId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ComponentAId) > 0 {
		i -= len(m.ComponentAId)
		copy(dAtA[i:], m.ComponentAId)
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(len(m.ComponentAId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.LctId) > 0 {
		i -= len(m.LctId)
		copy(dAtA[i:], m.LctId)
		i = encodeVarintLinkedContextToken(dAtA, i, uint64(len(m.LctId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintLinkedContextToken(dAtA []byte, offset int, v uint64) int {
	offset -= sovLinkedContextToken(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *LinkedContextToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.LctId)
	if l > 0 {
		n += 1 + l + sovLinkedContextToken(uint64(l))
	}
	l = len(m.ComponentAId)
	if l > 0 {
		n += 1 + l + sovLinkedContextToken(uint64(l))
	}
	l = len(m.ComponentBId)
	if l > 0 {
		n += 1 + l + sovLinkedContextToken(uint64(l))
	}
	l = len(m.LctKeyHalf)
	if l > 0 {
		n += 1 + l + sovLinkedContextToken(uint64(l))
	}
	l = len(m.PairingStatus)
	if l > 0 {
		n += 1 + l + sovLinkedContextToken(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovLinkedContextToken(uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		n += 1 + sovLinkedContextToken(uint64(m.UpdatedAt))
	}
	if m.LastContactAt != 0 {
		n += 1 + sovLinkedContextToken(uint64(m.LastContactAt))
	}
	l = len(m.TrustAnchor)
	if l > 0 {
		n += 1 + l + sovLinkedContextToken(uint64(l))
	}
	l = len(m.OperationalContext)
	if l > 0 {
		n += 1 + l + sovLinkedContextToken(uint64(l))
	}
	l = len(m.ProxyComponentId)
	if l > 0 {
		n += 1 + l + sovLinkedContextToken(uint64(l))
	}
	l = len(m.AuthorizationRules)
	if l > 0 {
		n += 1 + l + sovLinkedContextToken(uint64(l))
	}
	return n
}

func sovLinkedContextToken(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLinkedContextToken(x uint64) (n int) {
	return sovLinkedContextToken(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *LinkedContextToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLinkedContextToken
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LinkedContextToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LinkedContextToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LctId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LctId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentAId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentAId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentBId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentBId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LctKeyHalf", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LctKeyHalf = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PairingStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PairingStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			m.UpdatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastContactAt", wireType)
			}
			m.LastContactAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastContactAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrustAnchor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrustAnchor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperationalContext", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OperationalContext = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProxyComponentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProxyComponentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationRules", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorizationRules = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLinkedContextToken(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLinkedContextToken
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLinkedContextToken(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLinkedContextToken
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLinkedContextToken
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLinkedContextToken
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLinkedContextToken
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLinkedContextToken
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLinkedContextToken        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLinkedContextToken          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLinkedContextToken = fmt.Errorf("proto: unexpected end of group")
)
