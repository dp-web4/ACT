// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: racecarweb/trusttensor/v1/relationship_trust_tensor.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// RelationshipTrustTensor defines the RelationshipTrustTensor message.
type RelationshipTrustTensor struct {
	TensorId         string `protobuf:"bytes,1,opt,name=tensor_id,json=tensorId,proto3" json:"tensor_id,omitempty"`
	LctId            string `protobuf:"bytes,2,opt,name=lct_id,json=lctId,proto3" json:"lct_id,omitempty"`
	TensorType       string `protobuf:"bytes,3,opt,name=tensor_type,json=tensorType,proto3" json:"tensor_type,omitempty"`
	TalentScore      string `protobuf:"bytes,4,opt,name=talent_score,json=talentScore,proto3" json:"talent_score,omitempty"`
	TrainingScore    string `protobuf:"bytes,5,opt,name=training_score,json=trainingScore,proto3" json:"training_score,omitempty"`
	TemperamentScore string `protobuf:"bytes,6,opt,name=temperament_score,json=temperamentScore,proto3" json:"temperament_score,omitempty"`
	Context          string `protobuf:"bytes,7,opt,name=context,proto3" json:"context,omitempty"`
	CreatedAt        int64  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        int64  `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Version          int64  `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	EvidenceCount    int64  `protobuf:"varint,11,opt,name=evidence_count,json=evidenceCount,proto3" json:"evidence_count,omitempty"`
	ContextModifier  string `protobuf:"bytes,12,opt,name=context_modifier,json=contextModifier,proto3" json:"context_modifier,omitempty"`
}

func (m *RelationshipTrustTensor) Reset()         { *m = RelationshipTrustTensor{} }
func (m *RelationshipTrustTensor) String() string { return proto.CompactTextString(m) }
func (*RelationshipTrustTensor) ProtoMessage()    {}
func (*RelationshipTrustTensor) Descriptor() ([]byte, []int) {
	return fileDescriptor_18b2112c939445e1, []int{0}
}
func (m *RelationshipTrustTensor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RelationshipTrustTensor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RelationshipTrustTensor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RelationshipTrustTensor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationshipTrustTensor.Merge(m, src)
}
func (m *RelationshipTrustTensor) XXX_Size() int {
	return m.Size()
}
func (m *RelationshipTrustTensor) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationshipTrustTensor.DiscardUnknown(m)
}

var xxx_messageInfo_RelationshipTrustTensor proto.InternalMessageInfo

func (m *RelationshipTrustTensor) GetTensorId() string {
	if m != nil {
		return m.TensorId
	}
	return ""
}

func (m *RelationshipTrustTensor) GetLctId() string {
	if m != nil {
		return m.LctId
	}
	return ""
}

func (m *RelationshipTrustTensor) GetTensorType() string {
	if m != nil {
		return m.TensorType
	}
	return ""
}

func (m *RelationshipTrustTensor) GetTalentScore() string {
	if m != nil {
		return m.TalentScore
	}
	return ""
}

func (m *RelationshipTrustTensor) GetTrainingScore() string {
	if m != nil {
		return m.TrainingScore
	}
	return ""
}

func (m *RelationshipTrustTensor) GetTemperamentScore() string {
	if m != nil {
		return m.TemperamentScore
	}
	return ""
}

func (m *RelationshipTrustTensor) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *RelationshipTrustTensor) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *RelationshipTrustTensor) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *RelationshipTrustTensor) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *RelationshipTrustTensor) GetEvidenceCount() int64 {
	if m != nil {
		return m.EvidenceCount
	}
	return 0
}

func (m *RelationshipTrustTensor) GetContextModifier() string {
	if m != nil {
		return m.ContextModifier
	}
	return ""
}

func init() {
	proto.RegisterType((*RelationshipTrustTensor)(nil), "racecarweb.trusttensor.v1.RelationshipTrustTensor")
}

func init() {
	proto.RegisterFile("racecarweb/trusttensor/v1/relationship_trust_tensor.proto", fileDescriptor_18b2112c939445e1)
}

var fileDescriptor_18b2112c939445e1 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xcd, 0xae, 0x12, 0x31,
	0x14, 0x80, 0x19, 0x91, 0x9f, 0x29, 0xa0, 0xd8, 0xc4, 0x58, 0x63, 0x1c, 0xd0, 0xc4, 0x04, 0x63,
	0x84, 0x10, 0x57, 0x2c, 0xd1, 0x15, 0x0b, 0x37, 0xc8, 0xca, 0xcd, 0xa4, 0x74, 0x8e, 0xda, 0x64,
	0x68, 0x27, 0x9d, 0xc3, 0x08, 0x6f, 0xe1, 0x6b, 0xf8, 0x26, 0x2e, 0x59, 0xba, 0xbc, 0x81, 0x17,
	0xb9, 0xe9, 0xcf, 0x04, 0xee, 0x72, 0xbe, 0xef, 0x3b, 0x4d, 0x27, 0x3d, 0x64, 0x61, 0xb8, 0x00,
	0xc1, 0xcd, 0x6f, 0xd8, 0xce, 0xd0, 0xec, 0x4b, 0x44, 0x50, 0xa5, 0x36, 0xb3, 0x6a, 0x3e, 0x33,
	0x90, 0x73, 0x94, 0x5a, 0x95, 0xbf, 0x64, 0x91, 0x3a, 0x97, 0x7a, 0x39, 0x2d, 0x8c, 0x46, 0x4d,
	0x5f, 0x5e, 0x47, 0xa7, 0x37, 0xa3, 0xd3, 0x6a, 0xfe, 0xf6, 0x6f, 0x93, 0xbc, 0x58, 0xdf, 0x8c,
	0x6f, 0xac, 0xde, 0x38, 0x4d, 0x5f, 0x91, 0xd8, 0x87, 0xa9, 0xcc, 0x58, 0x34, 0x8e, 0x26, 0xf1,
	0xba, 0xeb, 0xc1, 0x2a, 0xa3, 0xcf, 0x49, 0x3b, 0x17, 0x68, 0xcd, 0x23, 0x67, 0x5a, 0xb9, 0xc0,
	0x55, 0x46, 0x47, 0xa4, 0x17, 0x66, 0xf0, 0x58, 0x00, 0x6b, 0x3a, 0x47, 0x3c, 0xda, 0x1c, 0x0b,
	0xa0, 0x6f, 0x48, 0x1f, 0x79, 0x0e, 0x0a, 0xd3, 0x52, 0x68, 0x03, 0xec, 0xb1, 0x2b, 0x7a, 0x9e,
	0x7d, 0xb3, 0x88, 0xbe, 0x23, 0x4f, 0xd0, 0x70, 0xa9, 0xa4, 0xfa, 0x19, 0xa2, 0x96, 0x8b, 0x06,
	0x35, 0xf5, 0xd9, 0x07, 0xf2, 0x0c, 0x61, 0x57, 0x80, 0xe1, 0xbb, 0xeb, 0x71, 0x6d, 0x57, 0x0e,
	0x6f, 0x84, 0x8f, 0x19, 0xe9, 0x08, 0xad, 0x10, 0x0e, 0xc8, 0x3a, 0x2e, 0xa9, 0x3f, 0xe9, 0x6b,
	0x42, 0x84, 0x01, 0x8e, 0x90, 0xa5, 0x1c, 0x59, 0x77, 0x1c, 0x4d, 0x9a, 0xeb, 0x38, 0x90, 0xa5,
	0xd3, 0xfb, 0x22, 0xab, 0x75, 0xec, 0x75, 0x20, 0x4b, 0xb4, 0xe7, 0x56, 0x60, 0x4a, 0xa9, 0x15,
	0x23, 0xce, 0xd5, 0x9f, 0xf6, 0x2f, 0xa0, 0x92, 0x19, 0x28, 0x01, 0xa9, 0xd0, 0x7b, 0x85, 0xac,
	0xe7, 0x82, 0x41, 0x4d, 0xbf, 0x58, 0x48, 0xdf, 0x93, 0x61, 0xb8, 0x49, 0xba, 0xd3, 0x99, 0xfc,
	0x21, 0xc1, 0xb0, 0xbe, 0xbb, 0xe1, 0xd3, 0xc0, 0xbf, 0x06, 0xfc, 0x79, 0xf1, 0xef, 0x9c, 0x44,
	0xa7, 0x73, 0x12, 0xdd, 0x9d, 0x93, 0xe8, 0xcf, 0x25, 0x69, 0x9c, 0x2e, 0x49, 0xe3, 0xff, 0x25,
	0x69, 0x7c, 0x1f, 0x85, 0x07, 0xfe, 0x68, 0x97, 0xe3, 0xf0, 0x60, 0x3d, 0xec, 0x33, 0x94, 0xdb,
	0xb6, 0x5b, 0x84, 0x4f, 0xf7, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x42, 0x1c, 0xc9, 0x45, 0x02,
	0x00, 0x00,
}

func (m *RelationshipTrustTensor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RelationshipTrustTensor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RelationshipTrustTensor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ContextModifier) > 0 {
		i -= len(m.ContextModifier)
		copy(dAtA[i:], m.ContextModifier)
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(len(m.ContextModifier)))
		i--
		dAtA[i] = 0x62
	}
	if m.EvidenceCount != 0 {
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(m.EvidenceCount))
		i--
		dAtA[i] = 0x58
	}
	if m.Version != 0 {
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x50
	}
	if m.UpdatedAt != 0 {
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(m.UpdatedAt))
		i--
		dAtA[i] = 0x48
	}
	if m.CreatedAt != 0 {
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Context) > 0 {
		i -= len(m.Context)
		copy(dAtA[i:], m.Context)
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(len(m.Context)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.TemperamentScore) > 0 {
		i -= len(m.TemperamentScore)
		copy(dAtA[i:], m.TemperamentScore)
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(len(m.TemperamentScore)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.TrainingScore) > 0 {
		i -= len(m.TrainingScore)
		copy(dAtA[i:], m.TrainingScore)
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(len(m.TrainingScore)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TalentScore) > 0 {
		i -= len(m.TalentScore)
		copy(dAtA[i:], m.TalentScore)
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(len(m.TalentScore)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TensorType) > 0 {
		i -= len(m.TensorType)
		copy(dAtA[i:], m.TensorType)
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(len(m.TensorType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.LctId) > 0 {
		i -= len(m.LctId)
		copy(dAtA[i:], m.LctId)
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(len(m.LctId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TensorId) > 0 {
		i -= len(m.TensorId)
		copy(dAtA[i:], m.TensorId)
		i = encodeVarintRelationshipTrustTensor(dAtA, i, uint64(len(m.TensorId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRelationshipTrustTensor(dAtA []byte, offset int, v uint64) int {
	offset -= sovRelationshipTrustTensor(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *RelationshipTrustTensor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TensorId)
	if l > 0 {
		n += 1 + l + sovRelationshipTrustTensor(uint64(l))
	}
	l = len(m.LctId)
	if l > 0 {
		n += 1 + l + sovRelationshipTrustTensor(uint64(l))
	}
	l = len(m.TensorType)
	if l > 0 {
		n += 1 + l + sovRelationshipTrustTensor(uint64(l))
	}
	l = len(m.TalentScore)
	if l > 0 {
		n += 1 + l + sovRelationshipTrustTensor(uint64(l))
	}
	l = len(m.TrainingScore)
	if l > 0 {
		n += 1 + l + sovRelationshipTrustTensor(uint64(l))
	}
	l = len(m.TemperamentScore)
	if l > 0 {
		n += 1 + l + sovRelationshipTrustTensor(uint64(l))
	}
	l = len(m.Context)
	if l > 0 {
		n += 1 + l + sovRelationshipTrustTensor(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovRelationshipTrustTensor(uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		n += 1 + sovRelationshipTrustTensor(uint64(m.UpdatedAt))
	}
	if m.Version != 0 {
		n += 1 + sovRelationshipTrustTensor(uint64(m.Version))
	}
	if m.EvidenceCount != 0 {
		n += 1 + sovRelationshipTrustTensor(uint64(m.EvidenceCount))
	}
	l = len(m.ContextModifier)
	if l > 0 {
		n += 1 + l + sovRelationshipTrustTensor(uint64(l))
	}
	return n
}

func sovRelationshipTrustTensor(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRelationshipTrustTensor(x uint64) (n int) {
	return sovRelationshipTrustTensor(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RelationshipTrustTensor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRelationshipTrustTensor
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RelationshipTrustTensor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RelationshipTrustTensor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TensorId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TensorId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LctId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LctId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TensorType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TensorType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TalentScore", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TalentScore = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrainingScore", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrainingScore = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemperamentScore", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TemperamentScore = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Context", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Context = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			m.UpdatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EvidenceCount", wireType)
			}
			m.EvidenceCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EvidenceCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextModifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContextModifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRelationshipTrustTensor(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRelationshipTrustTensor
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRelationshipTrustTensor(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRelationshipTrustTensor
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRelationshipTrustTensor
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRelationshipTrustTensor
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRelationshipTrustTensor
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRelationshipTrustTensor
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRelationshipTrustTensor        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRelationshipTrustTensor          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRelationshipTrustTensor = fmt.Errorf("proto: unexpected end of group")
)
