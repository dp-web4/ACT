// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: racecarweb/componentregistry/v1/pairing_authorization.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// PairingAuthorization defines the PairingAuthorization message.
type PairingAuthorization struct {
	AuthId              string `protobuf:"bytes,1,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	ComponentId         string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	AllowedPartnerTypes string `protobuf:"bytes,3,opt,name=allowed_partner_types,json=allowedPartnerTypes,proto3" json:"allowed_partner_types,omitempty"`
	AllowedPartnerIds   string `protobuf:"bytes,4,opt,name=allowed_partner_ids,json=allowedPartnerIds,proto3" json:"allowed_partner_ids,omitempty"`
	ParentChildRules    string `protobuf:"bytes,5,opt,name=parent_child_rules,json=parentChildRules,proto3" json:"parent_child_rules,omitempty"`
	ApplicationContext  string `protobuf:"bytes,6,opt,name=application_context,json=applicationContext,proto3" json:"application_context,omitempty"`
	ExpiresAt           int64  `protobuf:"varint,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Status              string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	TrustScore          string `protobuf:"bytes,9,opt,name=trust_score,json=trustScore,proto3" json:"trust_score,omitempty"`
	AuthorizationLevel  string `protobuf:"bytes,10,opt,name=authorization_level,json=authorizationLevel,proto3" json:"authorization_level,omitempty"`
	CreatedAt           int64  `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           int64  `protobuf:"varint,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LctId               string `protobuf:"bytes,13,opt,name=lct_id,json=lctId,proto3" json:"lct_id,omitempty"`
	Version             int64  `protobuf:"varint,14,opt,name=version,proto3" json:"version,omitempty"`
}

func (m *PairingAuthorization) Reset()         { *m = PairingAuthorization{} }
func (m *PairingAuthorization) String() string { return proto.CompactTextString(m) }
func (*PairingAuthorization) ProtoMessage()    {}
func (*PairingAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_1edc59acd907d758, []int{0}
}
func (m *PairingAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PairingAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PairingAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PairingAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PairingAuthorization.Merge(m, src)
}
func (m *PairingAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *PairingAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_PairingAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_PairingAuthorization proto.InternalMessageInfo

func (m *PairingAuthorization) GetAuthId() string {
	if m != nil {
		return m.AuthId
	}
	return ""
}

func (m *PairingAuthorization) GetComponentId() string {
	if m != nil {
		return m.ComponentId
	}
	return ""
}

func (m *PairingAuthorization) GetAllowedPartnerTypes() string {
	if m != nil {
		return m.AllowedPartnerTypes
	}
	return ""
}

func (m *PairingAuthorization) GetAllowedPartnerIds() string {
	if m != nil {
		return m.AllowedPartnerIds
	}
	return ""
}

func (m *PairingAuthorization) GetParentChildRules() string {
	if m != nil {
		return m.ParentChildRules
	}
	return ""
}

func (m *PairingAuthorization) GetApplicationContext() string {
	if m != nil {
		return m.ApplicationContext
	}
	return ""
}

func (m *PairingAuthorization) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *PairingAuthorization) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *PairingAuthorization) GetTrustScore() string {
	if m != nil {
		return m.TrustScore
	}
	return ""
}

func (m *PairingAuthorization) GetAuthorizationLevel() string {
	if m != nil {
		return m.AuthorizationLevel
	}
	return ""
}

func (m *PairingAuthorization) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *PairingAuthorization) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *PairingAuthorization) GetLctId() string {
	if m != nil {
		return m.LctId
	}
	return ""
}

func (m *PairingAuthorization) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterType((*PairingAuthorization)(nil), "racecarweb.componentregistry.v1.PairingAuthorization")
}

func init() {
	proto.RegisterFile("racecarweb/componentregistry/v1/pairing_authorization.proto", fileDescriptor_1edc59acd907d758)
}

var fileDescriptor_1edc59acd907d758 = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x86, 0xb3, 0xb4, 0xdd, 0x10, 0xa7, 0x20, 0x70, 0x28, 0xf8, 0xc2, 0xb6, 0x20, 0x21, 0xf5,
	0x00, 0x89, 0x0a, 0x47, 0x0e, 0x28, 0xf4, 0x14, 0x89, 0x43, 0x15, 0x38, 0x71, 0xb1, 0x5c, 0x7b,
	0xd4, 0x5a, 0x32, 0x6b, 0x6b, 0x3c, 0x9b, 0xa6, 0xbc, 0x03, 0x12, 0x8f, 0xc5, 0xb1, 0x47, 0x8e,
	0x28, 0x79, 0x11, 0x64, 0xef, 0xb6, 0x04, 0xe8, 0x71, 0xfe, 0x6f, 0xfe, 0xd9, 0x7f, 0x3d, 0xc3,
	0xde, 0xa2, 0xd2, 0xa0, 0x15, 0x5e, 0xc0, 0xe9, 0x44, 0xfb, 0x2f, 0xc1, 0xd7, 0x50, 0x13, 0xc2,
	0x99, 0x8d, 0x84, 0x97, 0x93, 0xc5, 0xd1, 0x24, 0x28, 0x8b, 0xb6, 0x3e, 0x93, 0xaa, 0xa1, 0x73,
	0x8f, 0xf6, 0xab, 0x22, 0xeb, 0xeb, 0x71, 0x40, 0x4f, 0x9e, 0xef, 0xff, 0x31, 0x8f, 0xff, 0x33,
	0x8f, 0x17, 0x47, 0xcf, 0xbf, 0x6d, 0xb3, 0x47, 0x27, 0xed, 0x80, 0xe9, 0xa6, 0x9f, 0x3f, 0x61,
	0xfd, 0x34, 0x50, 0x5a, 0x23, 0x8a, 0x83, 0xe2, 0x70, 0x30, 0x2f, 0x53, 0x39, 0x33, 0xfc, 0x19,
	0xdb, 0xbd, 0x99, 0x94, 0xe8, 0x9d, 0x4c, 0x87, 0x37, 0xda, 0xcc, 0xf0, 0xd7, 0x6c, 0x4f, 0x39,
	0xe7, 0x2f, 0xc0, 0xc8, 0xa0, 0x90, 0x6a, 0x40, 0x49, 0x97, 0x01, 0xa2, 0xd8, 0xca, 0xbd, 0xa3,
	0x0e, 0x9e, 0xb4, 0xec, 0x53, 0x42, 0x7c, 0xcc, 0x46, 0xff, 0x7a, 0xac, 0x89, 0x62, 0x3b, 0x3b,
	0x1e, 0xfe, 0xed, 0x98, 0x99, 0xc8, 0x5f, 0x32, 0x1e, 0x14, 0xa6, 0x0c, 0xfa, 0xdc, 0x3a, 0x23,
	0xb1, 0x71, 0x10, 0xc5, 0x4e, 0x6e, 0x7f, 0xd0, 0x92, 0xe3, 0x04, 0xe6, 0x49, 0xe7, 0x13, 0x36,
	0x52, 0x21, 0x38, 0xab, 0xf3, 0xcf, 0x49, 0xed, 0x6b, 0x82, 0x25, 0x89, 0x32, 0xb7, 0xf3, 0x0d,
	0x74, 0xdc, 0x12, 0xfe, 0x94, 0x31, 0x58, 0x06, 0x8b, 0x10, 0xa5, 0x22, 0xd1, 0x3f, 0x28, 0x0e,
	0xb7, 0xe6, 0x83, 0x4e, 0x99, 0x12, 0x7f, 0xcc, 0xca, 0x48, 0x8a, 0x9a, 0x28, 0xee, 0xb6, 0x8f,
	0xd3, 0x56, 0x7c, 0x9f, 0x0d, 0x09, 0x9b, 0x48, 0x32, 0x6a, 0x8f, 0x20, 0x06, 0x19, 0xb2, 0x2c,
	0x7d, 0x4c, 0x4a, 0x0e, 0xb2, 0xf9, 0xce, 0xd2, 0xc1, 0x02, 0x9c, 0x60, 0x5d, 0x90, 0x4d, 0xf4,
	0x21, 0x91, 0x14, 0x44, 0x23, 0x28, 0x02, 0x93, 0x82, 0x0c, 0xdb, 0x20, 0x9d, 0x32, 0xcd, 0x39,
	0x9b, 0x60, 0xae, 0xf1, 0x6e, 0x8b, 0x3b, 0x65, 0x4a, 0x7c, 0x8f, 0x95, 0x4e, 0xe7, 0x35, 0xdd,
	0xcb, 0x5f, 0xd8, 0x71, 0x3a, 0x2d, 0x48, 0xb0, 0xfe, 0x02, 0x30, 0x5a, 0x5f, 0x8b, 0xfb, 0xd9,
	0x72, 0x5d, 0xbe, 0x7f, 0xf7, 0x63, 0x55, 0x15, 0x57, 0xab, 0xaa, 0xf8, 0xb5, 0xaa, 0x8a, 0xef,
	0xeb, 0xaa, 0x77, 0xb5, 0xae, 0x7a, 0x3f, 0xd7, 0x55, 0xef, 0xf3, 0x8b, 0xee, 0x94, 0x5e, 0xa5,
	0x43, 0x5c, 0xde, 0x72, 0x8a, 0x79, 0xc5, 0xa7, 0x65, 0x3e, 0xbc, 0x37, 0xbf, 0x03, 0x00, 0x00,
	0xff, 0xff, 0xc2, 0x04, 0xf3, 0x9a, 0xb7, 0x02, 0x00, 0x00,
}

func (m *PairingAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PairingAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PairingAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Version != 0 {
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x70
	}
	if len(m.LctId) > 0 {
		i -= len(m.LctId)
		copy(dAtA[i:], m.LctId)
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(len(m.LctId)))
		i--
		dAtA[i] = 0x6a
	}
	if m.UpdatedAt != 0 {
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(m.UpdatedAt))
		i--
		dAtA[i] = 0x60
	}
	if m.CreatedAt != 0 {
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x58
	}
	if len(m.AuthorizationLevel) > 0 {
		i -= len(m.AuthorizationLevel)
		copy(dAtA[i:], m.AuthorizationLevel)
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(len(m.AuthorizationLevel)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.TrustScore) > 0 {
		i -= len(m.TrustScore)
		copy(dAtA[i:], m.TrustScore)
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(len(m.TrustScore)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x42
	}
	if m.ExpiresAt != 0 {
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(m.ExpiresAt))
		i--
		dAtA[i] = 0x38
	}
	if len(m.ApplicationContext) > 0 {
		i -= len(m.ApplicationContext)
		copy(dAtA[i:], m.ApplicationContext)
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(len(m.ApplicationContext)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ParentChildRules) > 0 {
		i -= len(m.ParentChildRules)
		copy(dAtA[i:], m.ParentChildRules)
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(len(m.ParentChildRules)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AllowedPartnerIds) > 0 {
		i -= len(m.AllowedPartnerIds)
		copy(dAtA[i:], m.AllowedPartnerIds)
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(len(m.AllowedPartnerIds)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AllowedPartnerTypes) > 0 {
		i -= len(m.AllowedPartnerTypes)
		copy(dAtA[i:], m.AllowedPartnerTypes)
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(len(m.AllowedPartnerTypes)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ComponentId) > 0 {
		i -= len(m.ComponentId)
		copy(dAtA[i:], m.ComponentId)
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(len(m.ComponentId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AuthId) > 0 {
		i -= len(m.AuthId)
		copy(dAtA[i:], m.AuthId)
		i = encodeVarintPairingAuthorization(dAtA, i, uint64(len(m.AuthId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPairingAuthorization(dAtA []byte, offset int, v uint64) int {
	offset -= sovPairingAuthorization(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PairingAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AuthId)
	if l > 0 {
		n += 1 + l + sovPairingAuthorization(uint64(l))
	}
	l = len(m.ComponentId)
	if l > 0 {
		n += 1 + l + sovPairingAuthorization(uint64(l))
	}
	l = len(m.AllowedPartnerTypes)
	if l > 0 {
		n += 1 + l + sovPairingAuthorization(uint64(l))
	}
	l = len(m.AllowedPartnerIds)
	if l > 0 {
		n += 1 + l + sovPairingAuthorization(uint64(l))
	}
	l = len(m.ParentChildRules)
	if l > 0 {
		n += 1 + l + sovPairingAuthorization(uint64(l))
	}
	l = len(m.ApplicationContext)
	if l > 0 {
		n += 1 + l + sovPairingAuthorization(uint64(l))
	}
	if m.ExpiresAt != 0 {
		n += 1 + sovPairingAuthorization(uint64(m.ExpiresAt))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovPairingAuthorization(uint64(l))
	}
	l = len(m.TrustScore)
	if l > 0 {
		n += 1 + l + sovPairingAuthorization(uint64(l))
	}
	l = len(m.AuthorizationLevel)
	if l > 0 {
		n += 1 + l + sovPairingAuthorization(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovPairingAuthorization(uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		n += 1 + sovPairingAuthorization(uint64(m.UpdatedAt))
	}
	l = len(m.LctId)
	if l > 0 {
		n += 1 + l + sovPairingAuthorization(uint64(l))
	}
	if m.Version != 0 {
		n += 1 + sovPairingAuthorization(uint64(m.Version))
	}
	return n
}

func sovPairingAuthorization(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPairingAuthorization(x uint64) (n int) {
	return sovPairingAuthorization(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PairingAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairingAuthorization
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PairingAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PairingAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedPartnerTypes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllowedPartnerTypes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedPartnerIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllowedPartnerIds = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentChildRules", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentChildRules = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationContext", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApplicationContext = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			m.ExpiresAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiresAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrustScore", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrustScore = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorizationLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			m.UpdatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LctId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LctId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPairingAuthorization(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairingAuthorization
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPairingAuthorization(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPairingAuthorization
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPairingAuthorization
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPairingAuthorization
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPairingAuthorization
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPairingAuthorization
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPairingAuthorization        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPairingAuthorization          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPairingAuthorization = fmt.Errorf("proto: unexpected end of group")
)
