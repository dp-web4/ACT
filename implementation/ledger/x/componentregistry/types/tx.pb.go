// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: racecarweb/componentregistry/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

// MsgRegisterComponent defines the MsgRegisterComponent message.
type MsgRegisterComponent struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ComponentId      string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	ComponentType    string `protobuf:"bytes,3,opt,name=component_type,json=componentType,proto3" json:"component_type,omitempty"`
	ManufacturerData string `protobuf:"bytes,4,opt,name=manufacturer_data,json=manufacturerData,proto3" json:"manufacturer_data,omitempty"`
}

func (m *MsgRegisterComponent) Reset()         { *m = MsgRegisterComponent{} }
func (m *MsgRegisterComponent) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterComponent) ProtoMessage()    {}
func (*MsgRegisterComponent) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{2}
}
func (m *MsgRegisterComponent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterComponent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterComponent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterComponent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterComponent.Merge(m, src)
}
func (m *MsgRegisterComponent) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterComponent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterComponent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterComponent proto.InternalMessageInfo

func (m *MsgRegisterComponent) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRegisterComponent) GetComponentId() string {
	if m != nil {
		return m.ComponentId
	}
	return ""
}

func (m *MsgRegisterComponent) GetComponentType() string {
	if m != nil {
		return m.ComponentType
	}
	return ""
}

func (m *MsgRegisterComponent) GetManufacturerData() string {
	if m != nil {
		return m.ManufacturerData
	}
	return ""
}

// MsgRegisterComponentResponse defines the MsgRegisterComponentResponse message.
type MsgRegisterComponentResponse struct {
	ComponentIdentity string `protobuf:"bytes,1,opt,name=component_identity,json=componentIdentity,proto3" json:"component_identity,omitempty"`
	LctId             string `protobuf:"bytes,2,opt,name=lct_id,json=lctId,proto3" json:"lct_id,omitempty"`
	Status            string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *MsgRegisterComponentResponse) Reset()         { *m = MsgRegisterComponentResponse{} }
func (m *MsgRegisterComponentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterComponentResponse) ProtoMessage()    {}
func (*MsgRegisterComponentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{3}
}
func (m *MsgRegisterComponentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterComponentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterComponentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterComponentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterComponentResponse.Merge(m, src)
}
func (m *MsgRegisterComponentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterComponentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterComponentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterComponentResponse proto.InternalMessageInfo

func (m *MsgRegisterComponentResponse) GetComponentIdentity() string {
	if m != nil {
		return m.ComponentIdentity
	}
	return ""
}

func (m *MsgRegisterComponentResponse) GetLctId() string {
	if m != nil {
		return m.LctId
	}
	return ""
}

func (m *MsgRegisterComponentResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// MsgUpdateAuthorization defines the MsgUpdateAuthorization message.
type MsgUpdateAuthorization struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	AuthRules   string `protobuf:"bytes,3,opt,name=auth_rules,json=authRules,proto3" json:"auth_rules,omitempty"`
}

func (m *MsgUpdateAuthorization) Reset()         { *m = MsgUpdateAuthorization{} }
func (m *MsgUpdateAuthorization) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAuthorization) ProtoMessage()    {}
func (*MsgUpdateAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{4}
}
func (m *MsgUpdateAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAuthorization.Merge(m, src)
}
func (m *MsgUpdateAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAuthorization proto.InternalMessageInfo

func (m *MsgUpdateAuthorization) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateAuthorization) GetComponentId() string {
	if m != nil {
		return m.ComponentId
	}
	return ""
}

func (m *MsgUpdateAuthorization) GetAuthRules() string {
	if m != nil {
		return m.AuthRules
	}
	return ""
}

// MsgUpdateAuthorizationResponse defines the MsgUpdateAuthorizationResponse message.
type MsgUpdateAuthorizationResponse struct {
}

func (m *MsgUpdateAuthorizationResponse) Reset()         { *m = MsgUpdateAuthorizationResponse{} }
func (m *MsgUpdateAuthorizationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAuthorizationResponse) ProtoMessage()    {}
func (*MsgUpdateAuthorizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{5}
}
func (m *MsgUpdateAuthorizationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAuthorizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAuthorizationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAuthorizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAuthorizationResponse.Merge(m, src)
}
func (m *MsgUpdateAuthorizationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAuthorizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAuthorizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAuthorizationResponse proto.InternalMessageInfo

// MsgVerifyComponent defines the MsgVerifyComponent message.
type MsgVerifyComponent struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (m *MsgVerifyComponent) Reset()         { *m = MsgVerifyComponent{} }
func (m *MsgVerifyComponent) String() string { return proto.CompactTextString(m) }
func (*MsgVerifyComponent) ProtoMessage()    {}
func (*MsgVerifyComponent) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{6}
}
func (m *MsgVerifyComponent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVerifyComponent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVerifyComponent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVerifyComponent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVerifyComponent.Merge(m, src)
}
func (m *MsgVerifyComponent) XXX_Size() int {
	return m.Size()
}
func (m *MsgVerifyComponent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVerifyComponent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVerifyComponent proto.InternalMessageInfo

func (m *MsgVerifyComponent) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgVerifyComponent) GetComponentId() string {
	if m != nil {
		return m.ComponentId
	}
	return ""
}

// MsgVerifyComponentResponse defines the MsgVerifyComponentResponse message.
type MsgVerifyComponentResponse struct {
	IsValid       bool   `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	ComponentData string `protobuf:"bytes,2,opt,name=component_data,json=componentData,proto3" json:"component_data,omitempty"`
}

func (m *MsgVerifyComponentResponse) Reset()         { *m = MsgVerifyComponentResponse{} }
func (m *MsgVerifyComponentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVerifyComponentResponse) ProtoMessage()    {}
func (*MsgVerifyComponentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{7}
}
func (m *MsgVerifyComponentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVerifyComponentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVerifyComponentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVerifyComponentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVerifyComponentResponse.Merge(m, src)
}
func (m *MsgVerifyComponentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVerifyComponentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVerifyComponentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVerifyComponentResponse proto.InternalMessageInfo

func (m *MsgVerifyComponentResponse) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *MsgVerifyComponentResponse) GetComponentData() string {
	if m != nil {
		return m.ComponentData
	}
	return ""
}

// MsgRegisterAnonymousComponent defines anonymous component registration
type MsgRegisterAnonymousComponent struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RealComponentId string `protobuf:"bytes,2,opt,name=real_component_id,json=realComponentId,proto3" json:"real_component_id,omitempty"`
	ManufacturerId  string `protobuf:"bytes,3,opt,name=manufacturer_id,json=manufacturerId,proto3" json:"manufacturer_id,omitempty"`
	ComponentType   string `protobuf:"bytes,4,opt,name=component_type,json=componentType,proto3" json:"component_type,omitempty"`
	Context         string `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
}

func (m *MsgRegisterAnonymousComponent) Reset()         { *m = MsgRegisterAnonymousComponent{} }
func (m *MsgRegisterAnonymousComponent) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterAnonymousComponent) ProtoMessage()    {}
func (*MsgRegisterAnonymousComponent) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{8}
}
func (m *MsgRegisterAnonymousComponent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterAnonymousComponent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterAnonymousComponent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterAnonymousComponent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterAnonymousComponent.Merge(m, src)
}
func (m *MsgRegisterAnonymousComponent) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterAnonymousComponent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterAnonymousComponent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterAnonymousComponent proto.InternalMessageInfo

func (m *MsgRegisterAnonymousComponent) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRegisterAnonymousComponent) GetRealComponentId() string {
	if m != nil {
		return m.RealComponentId
	}
	return ""
}

func (m *MsgRegisterAnonymousComponent) GetManufacturerId() string {
	if m != nil {
		return m.ManufacturerId
	}
	return ""
}

func (m *MsgRegisterAnonymousComponent) GetComponentType() string {
	if m != nil {
		return m.ComponentType
	}
	return ""
}

func (m *MsgRegisterAnonymousComponent) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// MsgRegisterAnonymousComponentResponse defines the response for anonymous registration
type MsgRegisterAnonymousComponentResponse struct {
	ComponentHash    string `protobuf:"bytes,1,opt,name=component_hash,json=componentHash,proto3" json:"component_hash,omitempty"`
	ManufacturerHash string `protobuf:"bytes,2,opt,name=manufacturer_hash,json=manufacturerHash,proto3" json:"manufacturer_hash,omitempty"`
	CategoryHash     string `protobuf:"bytes,3,opt,name=category_hash,json=categoryHash,proto3" json:"category_hash,omitempty"`
	Status           string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	TrustAnchor      string `protobuf:"bytes,5,opt,name=trust_anchor,json=trustAnchor,proto3" json:"trust_anchor,omitempty"`
}

func (m *MsgRegisterAnonymousComponentResponse) Reset()         { *m = MsgRegisterAnonymousComponentResponse{} }
func (m *MsgRegisterAnonymousComponentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterAnonymousComponentResponse) ProtoMessage()    {}
func (*MsgRegisterAnonymousComponentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{9}
}
func (m *MsgRegisterAnonymousComponentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterAnonymousComponentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterAnonymousComponentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterAnonymousComponentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterAnonymousComponentResponse.Merge(m, src)
}
func (m *MsgRegisterAnonymousComponentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterAnonymousComponentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterAnonymousComponentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterAnonymousComponentResponse proto.InternalMessageInfo

func (m *MsgRegisterAnonymousComponentResponse) GetComponentHash() string {
	if m != nil {
		return m.ComponentHash
	}
	return ""
}

func (m *MsgRegisterAnonymousComponentResponse) GetManufacturerHash() string {
	if m != nil {
		return m.ManufacturerHash
	}
	return ""
}

func (m *MsgRegisterAnonymousComponentResponse) GetCategoryHash() string {
	if m != nil {
		return m.CategoryHash
	}
	return ""
}

func (m *MsgRegisterAnonymousComponentResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgRegisterAnonymousComponentResponse) GetTrustAnchor() string {
	if m != nil {
		return m.TrustAnchor
	}
	return ""
}

// MsgVerifyComponentPairingWithHashes defines hash-based pairing verification
type MsgVerifyComponentPairingWithHashes struct {
	Verifier       string `protobuf:"bytes,1,opt,name=verifier,proto3" json:"verifier,omitempty"`
	ComponentHashA string `protobuf:"bytes,2,opt,name=component_hash_a,json=componentHashA,proto3" json:"component_hash_a,omitempty"`
	ComponentHashB string `protobuf:"bytes,3,opt,name=component_hash_b,json=componentHashB,proto3" json:"component_hash_b,omitempty"`
	Context        string `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
}

func (m *MsgVerifyComponentPairingWithHashes) Reset()         { *m = MsgVerifyComponentPairingWithHashes{} }
func (m *MsgVerifyComponentPairingWithHashes) String() string { return proto.CompactTextString(m) }
func (*MsgVerifyComponentPairingWithHashes) ProtoMessage()    {}
func (*MsgVerifyComponentPairingWithHashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{10}
}
func (m *MsgVerifyComponentPairingWithHashes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVerifyComponentPairingWithHashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVerifyComponentPairingWithHashes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVerifyComponentPairingWithHashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVerifyComponentPairingWithHashes.Merge(m, src)
}
func (m *MsgVerifyComponentPairingWithHashes) XXX_Size() int {
	return m.Size()
}
func (m *MsgVerifyComponentPairingWithHashes) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVerifyComponentPairingWithHashes.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVerifyComponentPairingWithHashes proto.InternalMessageInfo

func (m *MsgVerifyComponentPairingWithHashes) GetVerifier() string {
	if m != nil {
		return m.Verifier
	}
	return ""
}

func (m *MsgVerifyComponentPairingWithHashes) GetComponentHashA() string {
	if m != nil {
		return m.ComponentHashA
	}
	return ""
}

func (m *MsgVerifyComponentPairingWithHashes) GetComponentHashB() string {
	if m != nil {
		return m.ComponentHashB
	}
	return ""
}

func (m *MsgVerifyComponentPairingWithHashes) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// MsgVerifyComponentPairingWithHashesResponse defines the response for hash-based pairing
type MsgVerifyComponentPairingWithHashesResponse struct {
	CanPair    bool   `protobuf:"varint,1,opt,name=can_pair,json=canPair,proto3" json:"can_pair,omitempty"`
	Reason     string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	TrustScore string `protobuf:"bytes,3,opt,name=trust_score,json=trustScore,proto3" json:"trust_score,omitempty"`
}

func (m *MsgVerifyComponentPairingWithHashesResponse) Reset() {
	*m = MsgVerifyComponentPairingWithHashesResponse{}
}
func (m *MsgVerifyComponentPairingWithHashesResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgVerifyComponentPairingWithHashesResponse) ProtoMessage() {}
func (*MsgVerifyComponentPairingWithHashesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{11}
}
func (m *MsgVerifyComponentPairingWithHashesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVerifyComponentPairingWithHashesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVerifyComponentPairingWithHashesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVerifyComponentPairingWithHashesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVerifyComponentPairingWithHashesResponse.Merge(m, src)
}
func (m *MsgVerifyComponentPairingWithHashesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVerifyComponentPairingWithHashesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVerifyComponentPairingWithHashesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVerifyComponentPairingWithHashesResponse proto.InternalMessageInfo

func (m *MsgVerifyComponentPairingWithHashesResponse) GetCanPair() bool {
	if m != nil {
		return m.CanPair
	}
	return false
}

func (m *MsgVerifyComponentPairingWithHashesResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *MsgVerifyComponentPairingWithHashesResponse) GetTrustScore() string {
	if m != nil {
		return m.TrustScore
	}
	return ""
}

// MsgCreateAnonymousPairingAuthorization defines anonymous pairing authorization
type MsgCreateAnonymousPairingAuthorization struct {
	Creator               string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ComponentHashA        string `protobuf:"bytes,2,opt,name=component_hash_a,json=componentHashA,proto3" json:"component_hash_a,omitempty"`
	ComponentHashB        string `protobuf:"bytes,3,opt,name=component_hash_b,json=componentHashB,proto3" json:"component_hash_b,omitempty"`
	RuleHash              string `protobuf:"bytes,4,opt,name=rule_hash,json=ruleHash,proto3" json:"rule_hash,omitempty"`
	TrustScoreRequirement string `protobuf:"bytes,5,opt,name=trust_score_requirement,json=trustScoreRequirement,proto3" json:"trust_score_requirement,omitempty"`
	AuthorizationLevel    string `protobuf:"bytes,6,opt,name=authorization_level,json=authorizationLevel,proto3" json:"authorization_level,omitempty"`
}

func (m *MsgCreateAnonymousPairingAuthorization) Reset() {
	*m = MsgCreateAnonymousPairingAuthorization{}
}
func (m *MsgCreateAnonymousPairingAuthorization) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAnonymousPairingAuthorization) ProtoMessage()    {}
func (*MsgCreateAnonymousPairingAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{12}
}
func (m *MsgCreateAnonymousPairingAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAnonymousPairingAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAnonymousPairingAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAnonymousPairingAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAnonymousPairingAuthorization.Merge(m, src)
}
func (m *MsgCreateAnonymousPairingAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAnonymousPairingAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAnonymousPairingAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAnonymousPairingAuthorization proto.InternalMessageInfo

func (m *MsgCreateAnonymousPairingAuthorization) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateAnonymousPairingAuthorization) GetComponentHashA() string {
	if m != nil {
		return m.ComponentHashA
	}
	return ""
}

func (m *MsgCreateAnonymousPairingAuthorization) GetComponentHashB() string {
	if m != nil {
		return m.ComponentHashB
	}
	return ""
}

func (m *MsgCreateAnonymousPairingAuthorization) GetRuleHash() string {
	if m != nil {
		return m.RuleHash
	}
	return ""
}

func (m *MsgCreateAnonymousPairingAuthorization) GetTrustScoreRequirement() string {
	if m != nil {
		return m.TrustScoreRequirement
	}
	return ""
}

func (m *MsgCreateAnonymousPairingAuthorization) GetAuthorizationLevel() string {
	if m != nil {
		return m.AuthorizationLevel
	}
	return ""
}

// MsgCreateAnonymousPairingAuthorizationResponse defines the response for anonymous authorization
type MsgCreateAnonymousPairingAuthorizationResponse struct {
	AuthId    string `protobuf:"bytes,1,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ExpiresAt string `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (m *MsgCreateAnonymousPairingAuthorizationResponse) Reset() {
	*m = MsgCreateAnonymousPairingAuthorizationResponse{}
}
func (m *MsgCreateAnonymousPairingAuthorizationResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgCreateAnonymousPairingAuthorizationResponse) ProtoMessage() {}
func (*MsgCreateAnonymousPairingAuthorizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{13}
}
func (m *MsgCreateAnonymousPairingAuthorizationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAnonymousPairingAuthorizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAnonymousPairingAuthorizationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAnonymousPairingAuthorizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAnonymousPairingAuthorizationResponse.Merge(m, src)
}
func (m *MsgCreateAnonymousPairingAuthorizationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAnonymousPairingAuthorizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAnonymousPairingAuthorizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAnonymousPairingAuthorizationResponse proto.InternalMessageInfo

func (m *MsgCreateAnonymousPairingAuthorizationResponse) GetAuthId() string {
	if m != nil {
		return m.AuthId
	}
	return ""
}

func (m *MsgCreateAnonymousPairingAuthorizationResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgCreateAnonymousPairingAuthorizationResponse) GetExpiresAt() string {
	if m != nil {
		return m.ExpiresAt
	}
	return ""
}

// MsgCreateAnonymousRevocationEvent defines anonymous revocation events
type MsgCreateAnonymousRevocationEvent struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TargetHash     string `protobuf:"bytes,2,opt,name=target_hash,json=targetHash,proto3" json:"target_hash,omitempty"`
	RevocationType string `protobuf:"bytes,3,opt,name=revocation_type,json=revocationType,proto3" json:"revocation_type,omitempty"`
	UrgencyLevel   string `protobuf:"bytes,4,opt,name=urgency_level,json=urgencyLevel,proto3" json:"urgency_level,omitempty"`
	ReasonCategory string `protobuf:"bytes,5,opt,name=reason_category,json=reasonCategory,proto3" json:"reason_category,omitempty"`
	Context        string `protobuf:"bytes,6,opt,name=context,proto3" json:"context,omitempty"`
}

func (m *MsgCreateAnonymousRevocationEvent) Reset()         { *m = MsgCreateAnonymousRevocationEvent{} }
func (m *MsgCreateAnonymousRevocationEvent) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAnonymousRevocationEvent) ProtoMessage()    {}
func (*MsgCreateAnonymousRevocationEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{14}
}
func (m *MsgCreateAnonymousRevocationEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAnonymousRevocationEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAnonymousRevocationEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAnonymousRevocationEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAnonymousRevocationEvent.Merge(m, src)
}
func (m *MsgCreateAnonymousRevocationEvent) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAnonymousRevocationEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAnonymousRevocationEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAnonymousRevocationEvent proto.InternalMessageInfo

func (m *MsgCreateAnonymousRevocationEvent) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateAnonymousRevocationEvent) GetTargetHash() string {
	if m != nil {
		return m.TargetHash
	}
	return ""
}

func (m *MsgCreateAnonymousRevocationEvent) GetRevocationType() string {
	if m != nil {
		return m.RevocationType
	}
	return ""
}

func (m *MsgCreateAnonymousRevocationEvent) GetUrgencyLevel() string {
	if m != nil {
		return m.UrgencyLevel
	}
	return ""
}

func (m *MsgCreateAnonymousRevocationEvent) GetReasonCategory() string {
	if m != nil {
		return m.ReasonCategory
	}
	return ""
}

func (m *MsgCreateAnonymousRevocationEvent) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// MsgCreateAnonymousRevocationEventResponse defines the response for anonymous revocation
type MsgCreateAnonymousRevocationEventResponse struct {
	RevocationId string `protobuf:"bytes,1,opt,name=revocation_id,json=revocationId,proto3" json:"revocation_id,omitempty"`
	Status       string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	EffectiveAt  string `protobuf:"bytes,3,opt,name=effective_at,json=effectiveAt,proto3" json:"effective_at,omitempty"`
}

func (m *MsgCreateAnonymousRevocationEventResponse) Reset() {
	*m = MsgCreateAnonymousRevocationEventResponse{}
}
func (m *MsgCreateAnonymousRevocationEventResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgCreateAnonymousRevocationEventResponse) ProtoMessage() {}
func (*MsgCreateAnonymousRevocationEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{15}
}
func (m *MsgCreateAnonymousRevocationEventResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAnonymousRevocationEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAnonymousRevocationEventResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAnonymousRevocationEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAnonymousRevocationEventResponse.Merge(m, src)
}
func (m *MsgCreateAnonymousRevocationEventResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAnonymousRevocationEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAnonymousRevocationEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAnonymousRevocationEventResponse proto.InternalMessageInfo

func (m *MsgCreateAnonymousRevocationEventResponse) GetRevocationId() string {
	if m != nil {
		return m.RevocationId
	}
	return ""
}

func (m *MsgCreateAnonymousRevocationEventResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgCreateAnonymousRevocationEventResponse) GetEffectiveAt() string {
	if m != nil {
		return m.EffectiveAt
	}
	return ""
}

// MsgGetAnonymousComponentMetadata defines anonymous metadata retrieval
type MsgGetAnonymousComponentMetadata struct {
	Requester     string `protobuf:"bytes,1,opt,name=requester,proto3" json:"requester,omitempty"`
	ComponentHash string `protobuf:"bytes,2,opt,name=component_hash,json=componentHash,proto3" json:"component_hash,omitempty"`
}

func (m *MsgGetAnonymousComponentMetadata) Reset()         { *m = MsgGetAnonymousComponentMetadata{} }
func (m *MsgGetAnonymousComponentMetadata) String() string { return proto.CompactTextString(m) }
func (*MsgGetAnonymousComponentMetadata) ProtoMessage()    {}
func (*MsgGetAnonymousComponentMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{16}
}
func (m *MsgGetAnonymousComponentMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGetAnonymousComponentMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGetAnonymousComponentMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGetAnonymousComponentMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGetAnonymousComponentMetadata.Merge(m, src)
}
func (m *MsgGetAnonymousComponentMetadata) XXX_Size() int {
	return m.Size()
}
func (m *MsgGetAnonymousComponentMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGetAnonymousComponentMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGetAnonymousComponentMetadata proto.InternalMessageInfo

func (m *MsgGetAnonymousComponentMetadata) GetRequester() string {
	if m != nil {
		return m.Requester
	}
	return ""
}

func (m *MsgGetAnonymousComponentMetadata) GetComponentHash() string {
	if m != nil {
		return m.ComponentHash
	}
	return ""
}

// MsgGetAnonymousComponentMetadataResponse defines the response for anonymous metadata
type MsgGetAnonymousComponentMetadataResponse struct {
	ComponentHash string `protobuf:"bytes,1,opt,name=component_hash,json=componentHash,proto3" json:"component_hash,omitempty"`
	Type          string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status        string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	TrustAnchor   string `protobuf:"bytes,4,opt,name=trust_anchor,json=trustAnchor,proto3" json:"trust_anchor,omitempty"`
	LastVerified  string `protobuf:"bytes,5,opt,name=last_verified,json=lastVerified,proto3" json:"last_verified,omitempty"`
}

func (m *MsgGetAnonymousComponentMetadataResponse) Reset() {
	*m = MsgGetAnonymousComponentMetadataResponse{}
}
func (m *MsgGetAnonymousComponentMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGetAnonymousComponentMetadataResponse) ProtoMessage()    {}
func (*MsgGetAnonymousComponentMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{17}
}
func (m *MsgGetAnonymousComponentMetadataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGetAnonymousComponentMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGetAnonymousComponentMetadataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGetAnonymousComponentMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGetAnonymousComponentMetadataResponse.Merge(m, src)
}
func (m *MsgGetAnonymousComponentMetadataResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGetAnonymousComponentMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGetAnonymousComponentMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGetAnonymousComponentMetadataResponse proto.InternalMessageInfo

func (m *MsgGetAnonymousComponentMetadataResponse) GetComponentHash() string {
	if m != nil {
		return m.ComponentHash
	}
	return ""
}

func (m *MsgGetAnonymousComponentMetadataResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MsgGetAnonymousComponentMetadataResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgGetAnonymousComponentMetadataResponse) GetTrustAnchor() string {
	if m != nil {
		return m.TrustAnchor
	}
	return ""
}

func (m *MsgGetAnonymousComponentMetadataResponse) GetLastVerified() string {
	if m != nil {
		return m.LastVerified
	}
	return ""
}

// Event types for component registry
type EventComponentRegistered struct {
	ComponentId    string `protobuf:"bytes,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	ComponentType  string `protobuf:"bytes,2,opt,name=component_type,json=componentType,proto3" json:"component_type,omitempty"`
	ManufacturerId string `protobuf:"bytes,3,opt,name=manufacturer_id,json=manufacturerId,proto3" json:"manufacturer_id,omitempty"`
	Creator        string `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *EventComponentRegistered) Reset()         { *m = EventComponentRegistered{} }
func (m *EventComponentRegistered) String() string { return proto.CompactTextString(m) }
func (*EventComponentRegistered) ProtoMessage()    {}
func (*EventComponentRegistered) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{18}
}
func (m *EventComponentRegistered) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventComponentRegistered) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventComponentRegistered.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventComponentRegistered) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventComponentRegistered.Merge(m, src)
}
func (m *EventComponentRegistered) XXX_Size() int {
	return m.Size()
}
func (m *EventComponentRegistered) XXX_DiscardUnknown() {
	xxx_messageInfo_EventComponentRegistered.DiscardUnknown(m)
}

var xxx_messageInfo_EventComponentRegistered proto.InternalMessageInfo

func (m *EventComponentRegistered) GetComponentId() string {
	if m != nil {
		return m.ComponentId
	}
	return ""
}

func (m *EventComponentRegistered) GetComponentType() string {
	if m != nil {
		return m.ComponentType
	}
	return ""
}

func (m *EventComponentRegistered) GetManufacturerId() string {
	if m != nil {
		return m.ManufacturerId
	}
	return ""
}

func (m *EventComponentRegistered) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type EventComponentVerified struct {
	ComponentId string `protobuf:"bytes,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	Status      string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Verifier    string `protobuf:"bytes,3,opt,name=verifier,proto3" json:"verifier,omitempty"`
}

func (m *EventComponentVerified) Reset()         { *m = EventComponentVerified{} }
func (m *EventComponentVerified) String() string { return proto.CompactTextString(m) }
func (*EventComponentVerified) ProtoMessage()    {}
func (*EventComponentVerified) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{19}
}
func (m *EventComponentVerified) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventComponentVerified) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventComponentVerified.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventComponentVerified) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventComponentVerified.Merge(m, src)
}
func (m *EventComponentVerified) XXX_Size() int {
	return m.Size()
}
func (m *EventComponentVerified) XXX_DiscardUnknown() {
	xxx_messageInfo_EventComponentVerified.DiscardUnknown(m)
}

var xxx_messageInfo_EventComponentVerified proto.InternalMessageInfo

func (m *EventComponentVerified) GetComponentId() string {
	if m != nil {
		return m.ComponentId
	}
	return ""
}

func (m *EventComponentVerified) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *EventComponentVerified) GetVerifier() string {
	if m != nil {
		return m.Verifier
	}
	return ""
}

type EventAuthorizationUpdated struct {
	ComponentId string `protobuf:"bytes,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	Updater     string `protobuf:"bytes,2,opt,name=updater,proto3" json:"updater,omitempty"`
}

func (m *EventAuthorizationUpdated) Reset()         { *m = EventAuthorizationUpdated{} }
func (m *EventAuthorizationUpdated) String() string { return proto.CompactTextString(m) }
func (*EventAuthorizationUpdated) ProtoMessage()    {}
func (*EventAuthorizationUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{20}
}
func (m *EventAuthorizationUpdated) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventAuthorizationUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventAuthorizationUpdated.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventAuthorizationUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventAuthorizationUpdated.Merge(m, src)
}
func (m *EventAuthorizationUpdated) XXX_Size() int {
	return m.Size()
}
func (m *EventAuthorizationUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_EventAuthorizationUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_EventAuthorizationUpdated proto.InternalMessageInfo

func (m *EventAuthorizationUpdated) GetComponentId() string {
	if m != nil {
		return m.ComponentId
	}
	return ""
}

func (m *EventAuthorizationUpdated) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

// Privacy-focused event types
type EventAnonymousComponentRegistered struct {
	ComponentHash    string `protobuf:"bytes,1,opt,name=component_hash,json=componentHash,proto3" json:"component_hash,omitempty"`
	CategoryHash     string `protobuf:"bytes,2,opt,name=category_hash,json=categoryHash,proto3" json:"category_hash,omitempty"`
	ManufacturerHash string `protobuf:"bytes,3,opt,name=manufacturer_hash,json=manufacturerHash,proto3" json:"manufacturer_hash,omitempty"`
	Creator          string `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *EventAnonymousComponentRegistered) Reset()         { *m = EventAnonymousComponentRegistered{} }
func (m *EventAnonymousComponentRegistered) String() string { return proto.CompactTextString(m) }
func (*EventAnonymousComponentRegistered) ProtoMessage()    {}
func (*EventAnonymousComponentRegistered) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{21}
}
func (m *EventAnonymousComponentRegistered) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventAnonymousComponentRegistered) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventAnonymousComponentRegistered.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventAnonymousComponentRegistered) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventAnonymousComponentRegistered.Merge(m, src)
}
func (m *EventAnonymousComponentRegistered) XXX_Size() int {
	return m.Size()
}
func (m *EventAnonymousComponentRegistered) XXX_DiscardUnknown() {
	xxx_messageInfo_EventAnonymousComponentRegistered.DiscardUnknown(m)
}

var xxx_messageInfo_EventAnonymousComponentRegistered proto.InternalMessageInfo

func (m *EventAnonymousComponentRegistered) GetComponentHash() string {
	if m != nil {
		return m.ComponentHash
	}
	return ""
}

func (m *EventAnonymousComponentRegistered) GetCategoryHash() string {
	if m != nil {
		return m.CategoryHash
	}
	return ""
}

func (m *EventAnonymousComponentRegistered) GetManufacturerHash() string {
	if m != nil {
		return m.ManufacturerHash
	}
	return ""
}

func (m *EventAnonymousComponentRegistered) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type EventAnonymousPairingAuthorized struct {
	AuthId         string `protobuf:"bytes,1,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	ComponentHashA string `protobuf:"bytes,2,opt,name=component_hash_a,json=componentHashA,proto3" json:"component_hash_a,omitempty"`
	ComponentHashB string `protobuf:"bytes,3,opt,name=component_hash_b,json=componentHashB,proto3" json:"component_hash_b,omitempty"`
	Creator        string `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *EventAnonymousPairingAuthorized) Reset()         { *m = EventAnonymousPairingAuthorized{} }
func (m *EventAnonymousPairingAuthorized) String() string { return proto.CompactTextString(m) }
func (*EventAnonymousPairingAuthorized) ProtoMessage()    {}
func (*EventAnonymousPairingAuthorized) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{22}
}
func (m *EventAnonymousPairingAuthorized) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventAnonymousPairingAuthorized) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventAnonymousPairingAuthorized.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventAnonymousPairingAuthorized) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventAnonymousPairingAuthorized.Merge(m, src)
}
func (m *EventAnonymousPairingAuthorized) XXX_Size() int {
	return m.Size()
}
func (m *EventAnonymousPairingAuthorized) XXX_DiscardUnknown() {
	xxx_messageInfo_EventAnonymousPairingAuthorized.DiscardUnknown(m)
}

var xxx_messageInfo_EventAnonymousPairingAuthorized proto.InternalMessageInfo

func (m *EventAnonymousPairingAuthorized) GetAuthId() string {
	if m != nil {
		return m.AuthId
	}
	return ""
}

func (m *EventAnonymousPairingAuthorized) GetComponentHashA() string {
	if m != nil {
		return m.ComponentHashA
	}
	return ""
}

func (m *EventAnonymousPairingAuthorized) GetComponentHashB() string {
	if m != nil {
		return m.ComponentHashB
	}
	return ""
}

func (m *EventAnonymousPairingAuthorized) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type EventAnonymousRevocationCreated struct {
	RevocationId   string `protobuf:"bytes,1,opt,name=revocation_id,json=revocationId,proto3" json:"revocation_id,omitempty"`
	TargetHash     string `protobuf:"bytes,2,opt,name=target_hash,json=targetHash,proto3" json:"target_hash,omitempty"`
	RevocationType string `protobuf:"bytes,3,opt,name=revocation_type,json=revocationType,proto3" json:"revocation_type,omitempty"`
	UrgencyLevel   string `protobuf:"bytes,4,opt,name=urgency_level,json=urgencyLevel,proto3" json:"urgency_level,omitempty"`
	Creator        string `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *EventAnonymousRevocationCreated) Reset()         { *m = EventAnonymousRevocationCreated{} }
func (m *EventAnonymousRevocationCreated) String() string { return proto.CompactTextString(m) }
func (*EventAnonymousRevocationCreated) ProtoMessage()    {}
func (*EventAnonymousRevocationCreated) Descriptor() ([]byte, []int) {
	return fileDescriptor_a911f899bc8456a8, []int{23}
}
func (m *EventAnonymousRevocationCreated) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventAnonymousRevocationCreated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventAnonymousRevocationCreated.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventAnonymousRevocationCreated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventAnonymousRevocationCreated.Merge(m, src)
}
func (m *EventAnonymousRevocationCreated) XXX_Size() int {
	return m.Size()
}
func (m *EventAnonymousRevocationCreated) XXX_DiscardUnknown() {
	xxx_messageInfo_EventAnonymousRevocationCreated.DiscardUnknown(m)
}

var xxx_messageInfo_EventAnonymousRevocationCreated proto.InternalMessageInfo

func (m *EventAnonymousRevocationCreated) GetRevocationId() string {
	if m != nil {
		return m.RevocationId
	}
	return ""
}

func (m *EventAnonymousRevocationCreated) GetTargetHash() string {
	if m != nil {
		return m.TargetHash
	}
	return ""
}

func (m *EventAnonymousRevocationCreated) GetRevocationType() string {
	if m != nil {
		return m.RevocationType
	}
	return ""
}

func (m *EventAnonymousRevocationCreated) GetUrgencyLevel() string {
	if m != nil {
		return m.UrgencyLevel
	}
	return ""
}

func (m *EventAnonymousRevocationCreated) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "racecarweb.componentregistry.v1.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "racecarweb.componentregistry.v1.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgRegisterComponent)(nil), "racecarweb.componentregistry.v1.MsgRegisterComponent")
	proto.RegisterType((*MsgRegisterComponentResponse)(nil), "racecarweb.componentregistry.v1.MsgRegisterComponentResponse")
	proto.RegisterType((*MsgUpdateAuthorization)(nil), "racecarweb.componentregistry.v1.MsgUpdateAuthorization")
	proto.RegisterType((*MsgUpdateAuthorizationResponse)(nil), "racecarweb.componentregistry.v1.MsgUpdateAuthorizationResponse")
	proto.RegisterType((*MsgVerifyComponent)(nil), "racecarweb.componentregistry.v1.MsgVerifyComponent")
	proto.RegisterType((*MsgVerifyComponentResponse)(nil), "racecarweb.componentregistry.v1.MsgVerifyComponentResponse")
	proto.RegisterType((*MsgRegisterAnonymousComponent)(nil), "racecarweb.componentregistry.v1.MsgRegisterAnonymousComponent")
	proto.RegisterType((*MsgRegisterAnonymousComponentResponse)(nil), "racecarweb.componentregistry.v1.MsgRegisterAnonymousComponentResponse")
	proto.RegisterType((*MsgVerifyComponentPairingWithHashes)(nil), "racecarweb.componentregistry.v1.MsgVerifyComponentPairingWithHashes")
	proto.RegisterType((*MsgVerifyComponentPairingWithHashesResponse)(nil), "racecarweb.componentregistry.v1.MsgVerifyComponentPairingWithHashesResponse")
	proto.RegisterType((*MsgCreateAnonymousPairingAuthorization)(nil), "racecarweb.componentregistry.v1.MsgCreateAnonymousPairingAuthorization")
	proto.RegisterType((*MsgCreateAnonymousPairingAuthorizationResponse)(nil), "racecarweb.componentregistry.v1.MsgCreateAnonymousPairingAuthorizationResponse")
	proto.RegisterType((*MsgCreateAnonymousRevocationEvent)(nil), "racecarweb.componentregistry.v1.MsgCreateAnonymousRevocationEvent")
	proto.RegisterType((*MsgCreateAnonymousRevocationEventResponse)(nil), "racecarweb.componentregistry.v1.MsgCreateAnonymousRevocationEventResponse")
	proto.RegisterType((*MsgGetAnonymousComponentMetadata)(nil), "racecarweb.componentregistry.v1.MsgGetAnonymousComponentMetadata")
	proto.RegisterType((*MsgGetAnonymousComponentMetadataResponse)(nil), "racecarweb.componentregistry.v1.MsgGetAnonymousComponentMetadataResponse")
	proto.RegisterType((*EventComponentRegistered)(nil), "racecarweb.componentregistry.v1.EventComponentRegistered")
	proto.RegisterType((*EventComponentVerified)(nil), "racecarweb.componentregistry.v1.EventComponentVerified")
	proto.RegisterType((*EventAuthorizationUpdated)(nil), "racecarweb.componentregistry.v1.EventAuthorizationUpdated")
	proto.RegisterType((*EventAnonymousComponentRegistered)(nil), "racecarweb.componentregistry.v1.EventAnonymousComponentRegistered")
	proto.RegisterType((*EventAnonymousPairingAuthorized)(nil), "racecarweb.componentregistry.v1.EventAnonymousPairingAuthorized")
	proto.RegisterType((*EventAnonymousRevocationCreated)(nil), "racecarweb.componentregistry.v1.EventAnonymousRevocationCreated")
}

func init() {
	proto.RegisterFile("racecarweb/componentregistry/v1/tx.proto", fileDescriptor_a911f899bc8456a8)
}

var fileDescriptor_a911f899bc8456a8 = []byte{
	// 1476 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcf, 0x6f, 0x1b, 0xc5,
	0x17, 0xcf, 0xb8, 0xf9, 0xf9, 0xe2, 0x24, 0xcd, 0xf6, 0x47, 0x9c, 0xfd, 0x7e, 0xe3, 0x24, 0x8e,
	0xfa, 0x6d, 0xbe, 0x29, 0x8d, 0x69, 0x0b, 0x05, 0x15, 0x41, 0xe5, 0xa4, 0x50, 0x5a, 0x35, 0xa2,
	0x72, 0xa1, 0x20, 0x0e, 0xac, 0xa6, 0xeb, 0xc9, 0x66, 0x25, 0x7b, 0xd7, 0xcc, 0x8c, 0x4d, 0x5c,
	0x71, 0x28, 0x70, 0x02, 0x0e, 0xc0, 0x89, 0x0b, 0x47, 0x24, 0x7a, 0x41, 0x0a, 0x12, 0xea, 0x95,
	0x0b, 0x48, 0xbd, 0xb5, 0xe2, 0x54, 0x09, 0x09, 0xa1, 0xf6, 0x90, 0x3f, 0x81, 0x2b, 0x9a, 0xd9,
	0xdd, 0xd9, 0x5d, 0xef, 0x26, 0xde, 0x26, 0x0d, 0x97, 0x28, 0xfb, 0xe6, 0xcd, 0x7b, 0x9f, 0xf7,
	0xfb, 0x8d, 0x61, 0x91, 0x62, 0x93, 0x98, 0x98, 0x7e, 0x44, 0x6e, 0x95, 0x4d, 0xb7, 0xd1, 0x74,
	0x1d, 0xe2, 0x70, 0x4a, 0x2c, 0x9b, 0x71, 0xda, 0x29, 0xb7, 0xcf, 0x94, 0xf9, 0xe6, 0x72, 0x93,
	0xba, 0xdc, 0xd5, 0x66, 0x43, 0xce, 0xe5, 0x04, 0xe7, 0x72, 0xfb, 0x8c, 0x3e, 0x89, 0x1b, 0xb6,
	0xe3, 0x96, 0xe5, 0x5f, 0xef, 0x8e, 0x3e, 0x65, 0xba, 0xac, 0xe1, 0xb2, 0x72, 0x83, 0x59, 0x42,
	0x56, 0x83, 0x59, 0xfe, 0xc1, 0xb4, 0x77, 0x60, 0xc8, 0xaf, 0xb2, 0xf7, 0xe1, 0x1f, 0x1d, 0xb5,
	0x5c, 0xcb, 0xf5, 0xe8, 0xe2, 0x3f, 0x9f, 0xfa, 0x5c, 0x2f, 0x9c, 0x4d, 0x4c, 0x71, 0xc3, 0x97,
	0x51, 0x7a, 0x84, 0x60, 0x62, 0x8d, 0x59, 0xef, 0x34, 0x6b, 0x98, 0x93, 0xeb, 0xf2, 0x44, 0x3b,
	0x0f, 0x23, 0xb8, 0xc5, 0x37, 0x5c, 0x6a, 0xf3, 0x4e, 0x01, 0xcd, 0xa1, 0xc5, 0x91, 0x95, 0xc2,
	0xef, 0x3f, 0x9f, 0x3e, 0xea, 0x2b, 0xaf, 0xd4, 0x6a, 0x94, 0x30, 0x76, 0x83, 0x53, 0xdb, 0xb1,
	0xaa, 0x21, 0xab, 0x76, 0x15, 0x06, 0x3d, 0xd9, 0x85, 0xdc, 0x1c, 0x5a, 0x1c, 0x3d, 0x7b, 0x72,
	0xb9, 0x87, 0x23, 0x96, 0x3d, 0x85, 0x2b, 0x23, 0xf7, 0xff, 0x9c, 0xed, 0xbb, 0xbb, 0xbd, 0xb5,
	0x84, 0xaa, 0xbe, 0x84, 0x0b, 0x95, 0x4f, 0xb7, 0xb7, 0x96, 0x42, 0xd9, 0x5f, 0x6c, 0x6f, 0x2d,
	0x45, 0xa4, 0x95, 0x37, 0x53, 0x4c, 0xeb, 0x32, 0xa3, 0x34, 0x0d, 0x53, 0x5d, 0xa4, 0x2a, 0x61,
	0x4d, 0xd7, 0x61, 0xa4, 0xf4, 0x00, 0xc1, 0xd1, 0x35, 0x66, 0x55, 0xe5, 0x55, 0x42, 0x57, 0x03,
	0x59, 0xda, 0x59, 0x18, 0x32, 0x29, 0xc1, 0xdc, 0xa5, 0x3d, 0x0d, 0x0f, 0x18, 0xb5, 0x79, 0xc8,
	0x2b, 0x30, 0x86, 0x5d, 0x93, 0xc6, 0x8f, 0x54, 0x47, 0x15, 0xed, 0x4a, 0x4d, 0x3b, 0x01, 0xe3,
	0x21, 0x0b, 0xef, 0x34, 0x49, 0xe1, 0x90, 0x64, 0x1a, 0x53, 0xd4, 0xb7, 0x3b, 0x4d, 0xa2, 0x9d,
	0x82, 0xc9, 0x06, 0x76, 0x5a, 0xeb, 0xd8, 0xe4, 0x2d, 0x4a, 0xa8, 0x51, 0xc3, 0x1c, 0x17, 0xfa,
	0x25, 0xe7, 0xe1, 0xe8, 0xc1, 0x25, 0xcc, 0xf1, 0x85, 0xbc, 0xf0, 0x50, 0x00, 0xa2, 0xf4, 0x31,
	0xfc, 0x37, 0xcd, 0xa0, 0xc0, 0x62, 0xed, 0x34, 0x68, 0x51, 0x90, 0xc4, 0xe1, 0x2a, 0xb8, 0xd5,
	0xc9, 0x08, 0x54, 0xef, 0x40, 0x3b, 0x06, 0x83, 0x75, 0x33, 0x62, 0xcd, 0x40, 0xdd, 0x14, 0x76,
	0x1c, 0x87, 0x41, 0xc6, 0x31, 0x6f, 0x31, 0x1f, 0xbf, 0xff, 0x55, 0xfa, 0x0e, 0xc1, 0x71, 0xe5,
	0xeb, 0x8a, 0x17, 0xb4, 0xdb, 0x98, 0xdb, 0xae, 0x73, 0x50, 0x1e, 0x9d, 0x01, 0x10, 0xc9, 0x61,
	0xd0, 0x56, 0x9d, 0x04, 0x68, 0x64, 0xba, 0x54, 0x05, 0xa1, 0xcb, 0x39, 0x73, 0x50, 0x4c, 0x47,
	0xa7, 0x12, 0xa2, 0x03, 0xda, 0x1a, 0xb3, 0x6e, 0x12, 0x6a, 0xaf, 0x77, 0x0e, 0x3a, 0x1b, 0xba,
	0xc0, 0x7d, 0x00, 0x7a, 0x52, 0xb5, 0x8a, 0xdb, 0x34, 0x0c, 0xdb, 0xcc, 0x68, 0xe3, 0xba, 0x5d,
	0x93, 0x18, 0x86, 0xab, 0x43, 0x36, 0xbb, 0x29, 0x3e, 0xe3, 0x49, 0x25, 0x53, 0x25, 0xd7, 0x95,
	0x54, 0x22, 0x4f, 0x4a, 0x7f, 0x23, 0x98, 0x89, 0xa4, 0x46, 0xc5, 0x71, 0x9d, 0x4e, 0xc3, 0x6d,
	0xb1, 0xfd, 0x99, 0xb9, 0x04, 0x93, 0x94, 0xe0, 0xba, 0x91, 0x62, 0xeb, 0x84, 0x38, 0x58, 0x8d,
	0xc4, 0xea, 0x24, 0x4c, 0xc4, 0xd2, 0xda, 0xae, 0xf9, 0x01, 0x1b, 0x8f, 0x92, 0x53, 0xcb, 0xa4,
	0x3f, 0xad, 0x4c, 0x0a, 0x30, 0x64, 0xba, 0x0e, 0x27, 0x9b, 0xbc, 0x30, 0x20, 0xcf, 0x83, 0xcf,
	0x2e, 0xcf, 0xfe, 0x81, 0xe0, 0xc4, 0xae, 0x96, 0x2b, 0x2f, 0xc7, 0x14, 0x6f, 0x60, 0xb6, 0xe1,
	0x57, 0x46, 0xa8, 0xf8, 0x4d, 0xcc, 0x36, 0x12, 0xf5, 0x29, 0x39, 0x73, 0xc9, 0xfa, 0x94, 0xcc,
	0x0b, 0x30, 0x66, 0x62, 0x4e, 0x2c, 0x97, 0x76, 0x3c, 0x46, 0xcf, 0xe6, 0x7c, 0x40, 0x94, 0x4c,
	0x61, 0x41, 0xf5, 0x47, 0x0b, 0x4a, 0x64, 0x11, 0xa7, 0x2d, 0xc6, 0x0d, 0xec, 0x98, 0x1b, 0x2e,
	0xf5, 0xed, 0x1c, 0x95, 0xb4, 0x8a, 0x24, 0x89, 0xce, 0xbd, 0x90, 0x4c, 0x9c, 0xeb, 0xd8, 0x16,
	0x81, 0x7a, 0xd7, 0xe6, 0x1b, 0x42, 0x01, 0x61, 0xda, 0x0b, 0x30, 0xdc, 0x16, 0x3c, 0x36, 0xe9,
	0x1d, 0x5e, 0xc5, 0xa9, 0x2d, 0xc2, 0xe1, 0xb8, 0x47, 0x8c, 0x20, 0xbd, 0xc6, 0x63, 0x3e, 0xa9,
	0xa4, 0x70, 0xde, 0x0a, 0xc2, 0x1b, 0xe3, 0x5c, 0x89, 0xc6, 0xad, 0x3f, 0x1e, 0xb7, 0x31, 0x11,
	0x37, 0xa5, 0xbc, 0xf4, 0x09, 0x82, 0x53, 0x19, 0x4c, 0x8b, 0x16, 0x89, 0x89, 0x1d, 0xa3, 0x89,
	0x6d, 0x1a, 0x14, 0x89, 0x89, 0x1d, 0xc1, 0x2f, 0x1c, 0x4c, 0x09, 0x66, 0xae, 0xe3, 0xa3, 0xf7,
	0xbf, 0xb4, 0x59, 0xf0, 0x9c, 0x69, 0x30, 0xd3, 0xa5, 0x41, 0x3b, 0x06, 0x49, 0xba, 0x21, 0x28,
	0xa5, 0x5f, 0x73, 0xf0, 0xbf, 0x35, 0x66, 0xad, 0x8a, 0x5c, 0x22, 0x2a, 0x75, 0x7c, 0x0c, 0xfb,
	0x6f, 0x71, 0x07, 0xe1, 0xdf, 0xff, 0xc0, 0x88, 0x68, 0x87, 0x5e, 0xb6, 0x79, 0x1e, 0x1e, 0x16,
	0x04, 0x99, 0x69, 0xe7, 0x61, 0x2a, 0x62, 0xb0, 0x41, 0xc9, 0x87, 0x2d, 0x9b, 0x92, 0x06, 0x71,
	0x82, 0x22, 0x3a, 0x16, 0x1a, 0x5f, 0x0d, 0x0f, 0xb5, 0x32, 0x1c, 0xc1, 0x51, 0x6b, 0x8d, 0x3a,
	0x69, 0x93, 0x7a, 0x61, 0x50, 0xde, 0xd1, 0x62, 0x47, 0xd7, 0xc4, 0x49, 0x57, 0x0d, 0xde, 0x41,
	0xb0, 0x9c, 0xcd, 0x8d, 0x2a, 0x9a, 0x53, 0x30, 0x24, 0x5b, 0xbb, 0xdf, 0xf1, 0x46, 0xaa, 0x83,
	0xe2, 0x33, 0x36, 0x7d, 0x72, 0xb1, 0x62, 0x99, 0x01, 0x20, 0x9b, 0x4d, 0x9b, 0x12, 0x66, 0x60,
	0x1e, 0xcc, 0x02, 0x9f, 0x52, 0xe1, 0xa5, 0x6f, 0x73, 0x30, 0x9f, 0x84, 0x50, 0x25, 0x6d, 0xd7,
	0x94, 0x8a, 0x5f, 0x6f, 0xef, 0xb5, 0x09, 0x8a, 0x24, 0xc2, 0xd4, 0x22, 0x3c, 0xda, 0x09, 0xc0,
	0x23, 0x49, 0xa7, 0x9f, 0x84, 0x09, 0xaa, 0xf4, 0x44, 0x07, 0xff, 0x78, 0x48, 0x96, 0x2d, 0x6d,
	0x01, 0xc6, 0x5a, 0xd4, 0x22, 0x8e, 0xd9, 0xf1, 0xfd, 0xeb, 0x85, 0x2f, 0xef, 0x13, 0xa5, 0x67,
	0x3d, 0x69, 0x22, 0x7b, 0x8d, 0xa0, 0x87, 0xf8, 0xa1, 0x1b, 0xf7, 0xc8, 0xab, 0x3e, 0x35, 0x5a,
	0x68, 0x83, 0xbb, 0x35, 0xc8, 0x2f, 0x11, 0xfc, 0xbf, 0xa7, 0x67, 0x54, 0x5c, 0x16, 0x60, 0x2c,
	0x62, 0x8c, 0x8a, 0x4e, 0x3e, 0x24, 0xee, 0x12, 0xa3, 0x79, 0xc8, 0x93, 0xf5, 0x75, 0x62, 0x72,
	0xbb, 0x4d, 0xc2, 0x28, 0x8d, 0x2a, 0x5a, 0x85, 0x97, 0xbe, 0x41, 0x30, 0xb7, 0xc6, 0xac, 0xcb,
	0x84, 0x27, 0x3b, 0xf5, 0x1a, 0xe1, 0x58, 0x8c, 0x38, 0xb1, 0x9b, 0x8a, 0xd4, 0x25, 0xa2, 0xa1,
	0xf7, 0xde, 0x4d, 0x15, 0x6b, 0x4a, 0x87, 0xcf, 0xa5, 0x74, 0xf8, 0x0b, 0xe3, 0x72, 0xed, 0x54,
	0xd7, 0x4a, 0xbf, 0x21, 0x58, 0xec, 0x85, 0xe9, 0x69, 0xa7, 0x88, 0x06, 0xfd, 0x32, 0x13, 0x3c,
	0x00, 0xf2, 0xff, 0x9d, 0x16, 0xab, 0xc4, 0x1c, 0xe8, 0x4f, 0xcc, 0x01, 0x11, 0x96, 0x3a, 0x66,
	0xdc, 0xf0, 0xbb, 0x67, 0xcd, 0xcf, 0x89, 0xbc, 0x20, 0xde, 0xf4, 0x69, 0xa5, 0x1f, 0x10, 0x14,
	0x64, 0x34, 0x23, 0xb3, 0xcf, 0x9b, 0x8a, 0xa4, 0x96, 0x58, 0x59, 0x50, 0x96, 0x05, 0x36, 0x97,
	0x36, 0x99, 0x33, 0x4f, 0xfa, 0x42, 0x58, 0x6d, 0xc1, 0x28, 0xf0, 0x73, 0xd2, 0x85, 0xe3, 0x71,
	0xa0, 0x81, 0x0d, 0x59, 0x60, 0xee, 0x94, 0x7d, 0x7a, 0x64, 0x06, 0x7a, 0x80, 0xc2, 0x61, 0xf3,
	0x1e, 0x4c, 0x4b, 0x85, 0xb1, 0x66, 0xe4, 0xed, 0x8a, 0x99, 0x74, 0x16, 0x60, 0xa8, 0x25, 0xb9,
	0xa9, 0xaf, 0x34, 0xf8, 0x2c, 0xdd, 0x43, 0x30, 0xef, 0x89, 0x4e, 0xd9, 0x3c, 0x94, 0xf7, 0x33,
	0x66, 0x4d, 0x62, 0x9d, 0xc8, 0xa5, 0xac, 0x13, 0xa9, 0x0b, 0xca, 0xa1, 0x1d, 0x16, 0x94, 0x9d,
	0x63, 0x70, 0x17, 0xc1, 0x6c, 0x1c, 0x78, 0x57, 0xc3, 0x26, 0xb5, 0x9d, 0xbb, 0xf4, 0x41, 0x6d,
	0x0e, 0xe9, 0x50, 0x1f, 0x24, 0xa0, 0x86, 0xed, 0xcb, 0xeb, 0x6b, 0xb5, 0x6c, 0x8d, 0xeb, 0x5f,
	0xee, 0xe5, 0x11, 0x8b, 0x06, 0x62, 0x16, 0x9d, 0xfd, 0x69, 0x14, 0x0e, 0xad, 0x31, 0x4b, 0xbb,
	0x0d, 0xf9, 0xd8, 0xab, 0xfc, 0xf9, 0x9e, 0xaf, 0xe9, 0xae, 0xd7, 0xae, 0xfe, 0xf2, 0xd3, 0xde,
	0x50, 0x9d, 0xec, 0x73, 0x04, 0x93, 0xc9, 0xc7, 0xf1, 0x8b, 0x59, 0xe4, 0x25, 0xae, 0xe9, 0xaf,
	0xee, 0xe9, 0x9a, 0xc2, 0xf2, 0x15, 0x82, 0x23, 0x69, 0x0f, 0xcb, 0x97, 0xb2, 0x5b, 0x17, 0xbb,
	0xa8, 0x5f, 0xdc, 0xe3, 0x45, 0x85, 0xe8, 0x33, 0x04, 0x13, 0xdd, 0x4f, 0xc5, 0x73, 0x59, 0x84,
	0x76, 0x5d, 0xd2, 0x5f, 0xd9, 0xc3, 0x25, 0x85, 0xe2, 0x7b, 0x04, 0xfa, 0x2e, 0x8f, 0xba, 0xd7,
	0x9e, 0xc6, 0xeb, 0xc9, 0xfb, 0xfa, 0x1b, 0xfb, 0xbb, 0xaf, 0x60, 0xde, 0x43, 0x30, 0xd7, 0xf3,
	0x8d, 0x72, 0x69, 0x0f, 0x8e, 0x48, 0x48, 0xd1, 0xaf, 0x3d, 0x0b, 0x29, 0x0a, 0xf8, 0x2f, 0x08,
	0x16, 0xb2, 0x6c, 0xff, 0x97, 0xb3, 0x68, 0xcd, 0x20, 0x48, 0x7f, 0xeb, 0x19, 0x09, 0x52, 0x16,
	0x6c, 0x21, 0x28, 0xf6, 0xd8, 0x7a, 0x57, 0xf6, 0xa0, 0xb3, 0x4b, 0x86, 0x7e, 0x75, 0xff, 0x32,
	0x14, 0xe4, 0x1f, 0x11, 0xcc, 0xec, 0xbe, 0x00, 0x56, 0xb2, 0x68, 0xdb, 0x55, 0x84, 0x7e, 0x65,
	0xdf, 0x22, 0x02, 0xbc, 0xfa, 0xc0, 0x9d, 0xed, 0xad, 0x25, 0xb4, 0x72, 0xf1, 0xfe, 0xe3, 0x22,
	0x7a, 0xf8, 0xb8, 0x88, 0xfe, 0x7a, 0x5c, 0x44, 0x5f, 0x3f, 0x29, 0xf6, 0x3d, 0x7c, 0x52, 0xec,
	0x7b, 0xf4, 0xa4, 0xd8, 0xf7, 0xfe, 0x09, 0x5f, 0xd5, 0xe9, 0x9d, 0x7e, 0xb5, 0x14, 0x83, 0x84,
	0xdd, 0x1a, 0x94, 0xbf, 0xc6, 0x9e, 0xfb, 0x27, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x25, 0xb0, 0x2a,
	0x65, 0x16, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	// RegisterComponent defines the RegisterComponent RPC.
	RegisterComponent(ctx context.Context, in *MsgRegisterComponent, opts ...grpc.CallOption) (*MsgRegisterComponentResponse, error)
	// UpdateAuthorization defines the UpdateAuthorization RPC.
	UpdateAuthorization(ctx context.Context, in *MsgUpdateAuthorization, opts ...grpc.CallOption) (*MsgUpdateAuthorizationResponse, error)
	// VerifyComponent defines the VerifyComponent RPC.
	VerifyComponent(ctx context.Context, in *MsgVerifyComponent, opts ...grpc.CallOption) (*MsgVerifyComponentResponse, error)
	// Privacy-focused message types
	RegisterAnonymousComponent(ctx context.Context, in *MsgRegisterAnonymousComponent, opts ...grpc.CallOption) (*MsgRegisterAnonymousComponentResponse, error)
	VerifyComponentPairingWithHashes(ctx context.Context, in *MsgVerifyComponentPairingWithHashes, opts ...grpc.CallOption) (*MsgVerifyComponentPairingWithHashesResponse, error)
	CreateAnonymousPairingAuthorization(ctx context.Context, in *MsgCreateAnonymousPairingAuthorization, opts ...grpc.CallOption) (*MsgCreateAnonymousPairingAuthorizationResponse, error)
	CreateAnonymousRevocationEvent(ctx context.Context, in *MsgCreateAnonymousRevocationEvent, opts ...grpc.CallOption) (*MsgCreateAnonymousRevocationEventResponse, error)
	GetAnonymousComponentMetadata(ctx context.Context, in *MsgGetAnonymousComponentMetadata, opts ...grpc.CallOption) (*MsgGetAnonymousComponentMetadataResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/racecarweb.componentregistry.v1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RegisterComponent(ctx context.Context, in *MsgRegisterComponent, opts ...grpc.CallOption) (*MsgRegisterComponentResponse, error) {
	out := new(MsgRegisterComponentResponse)
	err := c.cc.Invoke(ctx, "/racecarweb.componentregistry.v1.Msg/RegisterComponent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateAuthorization(ctx context.Context, in *MsgUpdateAuthorization, opts ...grpc.CallOption) (*MsgUpdateAuthorizationResponse, error) {
	out := new(MsgUpdateAuthorizationResponse)
	err := c.cc.Invoke(ctx, "/racecarweb.componentregistry.v1.Msg/UpdateAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VerifyComponent(ctx context.Context, in *MsgVerifyComponent, opts ...grpc.CallOption) (*MsgVerifyComponentResponse, error) {
	out := new(MsgVerifyComponentResponse)
	err := c.cc.Invoke(ctx, "/racecarweb.componentregistry.v1.Msg/VerifyComponent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RegisterAnonymousComponent(ctx context.Context, in *MsgRegisterAnonymousComponent, opts ...grpc.CallOption) (*MsgRegisterAnonymousComponentResponse, error) {
	out := new(MsgRegisterAnonymousComponentResponse)
	err := c.cc.Invoke(ctx, "/racecarweb.componentregistry.v1.Msg/RegisterAnonymousComponent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VerifyComponentPairingWithHashes(ctx context.Context, in *MsgVerifyComponentPairingWithHashes, opts ...grpc.CallOption) (*MsgVerifyComponentPairingWithHashesResponse, error) {
	out := new(MsgVerifyComponentPairingWithHashesResponse)
	err := c.cc.Invoke(ctx, "/racecarweb.componentregistry.v1.Msg/VerifyComponentPairingWithHashes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateAnonymousPairingAuthorization(ctx context.Context, in *MsgCreateAnonymousPairingAuthorization, opts ...grpc.CallOption) (*MsgCreateAnonymousPairingAuthorizationResponse, error) {
	out := new(MsgCreateAnonymousPairingAuthorizationResponse)
	err := c.cc.Invoke(ctx, "/racecarweb.componentregistry.v1.Msg/CreateAnonymousPairingAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateAnonymousRevocationEvent(ctx context.Context, in *MsgCreateAnonymousRevocationEvent, opts ...grpc.CallOption) (*MsgCreateAnonymousRevocationEventResponse, error) {
	out := new(MsgCreateAnonymousRevocationEventResponse)
	err := c.cc.Invoke(ctx, "/racecarweb.componentregistry.v1.Msg/CreateAnonymousRevocationEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GetAnonymousComponentMetadata(ctx context.Context, in *MsgGetAnonymousComponentMetadata, opts ...grpc.CallOption) (*MsgGetAnonymousComponentMetadataResponse, error) {
	out := new(MsgGetAnonymousComponentMetadataResponse)
	err := c.cc.Invoke(ctx, "/racecarweb.componentregistry.v1.Msg/GetAnonymousComponentMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	// RegisterComponent defines the RegisterComponent RPC.
	RegisterComponent(context.Context, *MsgRegisterComponent) (*MsgRegisterComponentResponse, error)
	// UpdateAuthorization defines the UpdateAuthorization RPC.
	UpdateAuthorization(context.Context, *MsgUpdateAuthorization) (*MsgUpdateAuthorizationResponse, error)
	// VerifyComponent defines the VerifyComponent RPC.
	VerifyComponent(context.Context, *MsgVerifyComponent) (*MsgVerifyComponentResponse, error)
	// Privacy-focused message types
	RegisterAnonymousComponent(context.Context, *MsgRegisterAnonymousComponent) (*MsgRegisterAnonymousComponentResponse, error)
	VerifyComponentPairingWithHashes(context.Context, *MsgVerifyComponentPairingWithHashes) (*MsgVerifyComponentPairingWithHashesResponse, error)
	CreateAnonymousPairingAuthorization(context.Context, *MsgCreateAnonymousPairingAuthorization) (*MsgCreateAnonymousPairingAuthorizationResponse, error)
	CreateAnonymousRevocationEvent(context.Context, *MsgCreateAnonymousRevocationEvent) (*MsgCreateAnonymousRevocationEventResponse, error)
	GetAnonymousComponentMetadata(context.Context, *MsgGetAnonymousComponentMetadata) (*MsgGetAnonymousComponentMetadataResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) RegisterComponent(ctx context.Context, req *MsgRegisterComponent) (*MsgRegisterComponentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterComponent not implemented")
}
func (*UnimplementedMsgServer) UpdateAuthorization(ctx context.Context, req *MsgUpdateAuthorization) (*MsgUpdateAuthorizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuthorization not implemented")
}
func (*UnimplementedMsgServer) VerifyComponent(ctx context.Context, req *MsgVerifyComponent) (*MsgVerifyComponentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyComponent not implemented")
}
func (*UnimplementedMsgServer) RegisterAnonymousComponent(ctx context.Context, req *MsgRegisterAnonymousComponent) (*MsgRegisterAnonymousComponentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterAnonymousComponent not implemented")
}
func (*UnimplementedMsgServer) VerifyComponentPairingWithHashes(ctx context.Context, req *MsgVerifyComponentPairingWithHashes) (*MsgVerifyComponentPairingWithHashesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyComponentPairingWithHashes not implemented")
}
func (*UnimplementedMsgServer) CreateAnonymousPairingAuthorization(ctx context.Context, req *MsgCreateAnonymousPairingAuthorization) (*MsgCreateAnonymousPairingAuthorizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAnonymousPairingAuthorization not implemented")
}
func (*UnimplementedMsgServer) CreateAnonymousRevocationEvent(ctx context.Context, req *MsgCreateAnonymousRevocationEvent) (*MsgCreateAnonymousRevocationEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAnonymousRevocationEvent not implemented")
}
func (*UnimplementedMsgServer) GetAnonymousComponentMetadata(ctx context.Context, req *MsgGetAnonymousComponentMetadata) (*MsgGetAnonymousComponentMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAnonymousComponentMetadata not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/racecarweb.componentregistry.v1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RegisterComponent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterComponent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterComponent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/racecarweb.componentregistry.v1.Msg/RegisterComponent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterComponent(ctx, req.(*MsgRegisterComponent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/racecarweb.componentregistry.v1.Msg/UpdateAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateAuthorization(ctx, req.(*MsgUpdateAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VerifyComponent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVerifyComponent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VerifyComponent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/racecarweb.componentregistry.v1.Msg/VerifyComponent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VerifyComponent(ctx, req.(*MsgVerifyComponent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RegisterAnonymousComponent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterAnonymousComponent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterAnonymousComponent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/racecarweb.componentregistry.v1.Msg/RegisterAnonymousComponent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterAnonymousComponent(ctx, req.(*MsgRegisterAnonymousComponent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VerifyComponentPairingWithHashes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVerifyComponentPairingWithHashes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VerifyComponentPairingWithHashes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/racecarweb.componentregistry.v1.Msg/VerifyComponentPairingWithHashes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VerifyComponentPairingWithHashes(ctx, req.(*MsgVerifyComponentPairingWithHashes))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateAnonymousPairingAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateAnonymousPairingAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateAnonymousPairingAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/racecarweb.componentregistry.v1.Msg/CreateAnonymousPairingAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateAnonymousPairingAuthorization(ctx, req.(*MsgCreateAnonymousPairingAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateAnonymousRevocationEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateAnonymousRevocationEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateAnonymousRevocationEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/racecarweb.componentregistry.v1.Msg/CreateAnonymousRevocationEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateAnonymousRevocationEvent(ctx, req.(*MsgCreateAnonymousRevocationEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GetAnonymousComponentMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGetAnonymousComponentMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GetAnonymousComponentMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/racecarweb.componentregistry.v1.Msg/GetAnonymousComponentMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GetAnonymousComponentMetadata(ctx, req.(*MsgGetAnonymousComponentMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "racecarweb.componentregistry.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "RegisterComponent",
			Handler:    _Msg_RegisterComponent_Handler,
		},
		{
			MethodName: "UpdateAuthorization",
			Handler:    _Msg_UpdateAuthorization_Handler,
		},
		{
			MethodName: "VerifyComponent",
			Handler:    _Msg_VerifyComponent_Handler,
		},
		{
			MethodName: "RegisterAnonymousComponent",
			Handler:    _Msg_RegisterAnonymousComponent_Handler,
		},
		{
			MethodName: "VerifyComponentPairingWithHashes",
			Handler:    _Msg_VerifyComponentPairingWithHashes_Handler,
		},
		{
			MethodName: "CreateAnonymousPairingAuthorization",
			Handler:    _Msg_CreateAnonymousPairingAuthorization_Handler,
		},
		{
			MethodName: "CreateAnonymousRevocationEvent",
			Handler:    _Msg_CreateAnonymousRevocationEvent_Handler,
		},
		{
			MethodName: "GetAnonymousComponentMetadata",
			Handler:    _Msg_GetAnonymousComponentMetadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "racecarweb/componentregistry/v1/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRegisterComponent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterComponent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterComponent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ManufacturerData) > 0 {
		i -= len(m.ManufacturerData)
		copy(dAtA[i:], m.ManufacturerData)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ManufacturerData)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ComponentType) > 0 {
		i -= len(m.ComponentType)
		copy(dAtA[i:], m.ComponentType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ComponentId) > 0 {
		i -= len(m.ComponentId)
		copy(dAtA[i:], m.ComponentId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterComponentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterComponentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterComponentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.LctId) > 0 {
		i -= len(m.LctId)
		copy(dAtA[i:], m.LctId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LctId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ComponentIdentity) > 0 {
		i -= len(m.ComponentIdentity)
		copy(dAtA[i:], m.ComponentIdentity)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentIdentity)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AuthRules) > 0 {
		i -= len(m.AuthRules)
		copy(dAtA[i:], m.AuthRules)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuthRules)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ComponentId) > 0 {
		i -= len(m.ComponentId)
		copy(dAtA[i:], m.ComponentId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAuthorizationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAuthorizationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAuthorizationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgVerifyComponent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVerifyComponent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVerifyComponent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ComponentId) > 0 {
		i -= len(m.ComponentId)
		copy(dAtA[i:], m.ComponentId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVerifyComponentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVerifyComponentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVerifyComponentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ComponentData) > 0 {
		i -= len(m.ComponentData)
		copy(dAtA[i:], m.ComponentData)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentData)))
		i--
		dAtA[i] = 0x12
	}
	if m.IsValid {
		i--
		if m.IsValid {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterAnonymousComponent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterAnonymousComponent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterAnonymousComponent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Context) > 0 {
		i -= len(m.Context)
		copy(dAtA[i:], m.Context)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Context)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ComponentType) > 0 {
		i -= len(m.ComponentType)
		copy(dAtA[i:], m.ComponentType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentType)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ManufacturerId) > 0 {
		i -= len(m.ManufacturerId)
		copy(dAtA[i:], m.ManufacturerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ManufacturerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RealComponentId) > 0 {
		i -= len(m.RealComponentId)
		copy(dAtA[i:], m.RealComponentId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RealComponentId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterAnonymousComponentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterAnonymousComponentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterAnonymousComponentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TrustAnchor) > 0 {
		i -= len(m.TrustAnchor)
		copy(dAtA[i:], m.TrustAnchor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TrustAnchor)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CategoryHash) > 0 {
		i -= len(m.CategoryHash)
		copy(dAtA[i:], m.CategoryHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CategoryHash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ManufacturerHash) > 0 {
		i -= len(m.ManufacturerHash)
		copy(dAtA[i:], m.ManufacturerHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ManufacturerHash)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ComponentHash) > 0 {
		i -= len(m.ComponentHash)
		copy(dAtA[i:], m.ComponentHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVerifyComponentPairingWithHashes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVerifyComponentPairingWithHashes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVerifyComponentPairingWithHashes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Context) > 0 {
		i -= len(m.Context)
		copy(dAtA[i:], m.Context)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Context)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ComponentHashB) > 0 {
		i -= len(m.ComponentHashB)
		copy(dAtA[i:], m.ComponentHashB)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentHashB)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ComponentHashA) > 0 {
		i -= len(m.ComponentHashA)
		copy(dAtA[i:], m.ComponentHashA)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentHashA)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Verifier) > 0 {
		i -= len(m.Verifier)
		copy(dAtA[i:], m.Verifier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Verifier)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVerifyComponentPairingWithHashesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVerifyComponentPairingWithHashesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVerifyComponentPairingWithHashesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TrustScore) > 0 {
		i -= len(m.TrustScore)
		copy(dAtA[i:], m.TrustScore)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TrustScore)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x12
	}
	if m.CanPair {
		i--
		if m.CanPair {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateAnonymousPairingAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAnonymousPairingAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAnonymousPairingAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AuthorizationLevel) > 0 {
		i -= len(m.AuthorizationLevel)
		copy(dAtA[i:], m.AuthorizationLevel)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuthorizationLevel)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.TrustScoreRequirement) > 0 {
		i -= len(m.TrustScoreRequirement)
		copy(dAtA[i:], m.TrustScoreRequirement)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TrustScoreRequirement)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.RuleHash) > 0 {
		i -= len(m.RuleHash)
		copy(dAtA[i:], m.RuleHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RuleHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ComponentHashB) > 0 {
		i -= len(m.ComponentHashB)
		copy(dAtA[i:], m.ComponentHashB)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentHashB)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ComponentHashA) > 0 {
		i -= len(m.ComponentHashA)
		copy(dAtA[i:], m.ComponentHashA)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentHashA)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateAnonymousPairingAuthorizationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAnonymousPairingAuthorizationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAnonymousPairingAuthorizationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ExpiresAt) > 0 {
		i -= len(m.ExpiresAt)
		copy(dAtA[i:], m.ExpiresAt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ExpiresAt)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AuthId) > 0 {
		i -= len(m.AuthId)
		copy(dAtA[i:], m.AuthId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuthId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateAnonymousRevocationEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAnonymousRevocationEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAnonymousRevocationEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Context) > 0 {
		i -= len(m.Context)
		copy(dAtA[i:], m.Context)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Context)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ReasonCategory) > 0 {
		i -= len(m.ReasonCategory)
		copy(dAtA[i:], m.ReasonCategory)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReasonCategory)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.UrgencyLevel) > 0 {
		i -= len(m.UrgencyLevel)
		copy(dAtA[i:], m.UrgencyLevel)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UrgencyLevel)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RevocationType) > 0 {
		i -= len(m.RevocationType)
		copy(dAtA[i:], m.RevocationType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RevocationType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TargetHash) > 0 {
		i -= len(m.TargetHash)
		copy(dAtA[i:], m.TargetHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TargetHash)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateAnonymousRevocationEventResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAnonymousRevocationEventResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAnonymousRevocationEventResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EffectiveAt) > 0 {
		i -= len(m.EffectiveAt)
		copy(dAtA[i:], m.EffectiveAt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EffectiveAt)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RevocationId) > 0 {
		i -= len(m.RevocationId)
		copy(dAtA[i:], m.RevocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RevocationId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGetAnonymousComponentMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGetAnonymousComponentMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGetAnonymousComponentMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ComponentHash) > 0 {
		i -= len(m.ComponentHash)
		copy(dAtA[i:], m.ComponentHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentHash)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Requester) > 0 {
		i -= len(m.Requester)
		copy(dAtA[i:], m.Requester)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Requester)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGetAnonymousComponentMetadataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGetAnonymousComponentMetadataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGetAnonymousComponentMetadataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LastVerified) > 0 {
		i -= len(m.LastVerified)
		copy(dAtA[i:], m.LastVerified)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LastVerified)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TrustAnchor) > 0 {
		i -= len(m.TrustAnchor)
		copy(dAtA[i:], m.TrustAnchor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TrustAnchor)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ComponentHash) > 0 {
		i -= len(m.ComponentHash)
		copy(dAtA[i:], m.ComponentHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventComponentRegistered) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventComponentRegistered) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventComponentRegistered) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ManufacturerId) > 0 {
		i -= len(m.ManufacturerId)
		copy(dAtA[i:], m.ManufacturerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ManufacturerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ComponentType) > 0 {
		i -= len(m.ComponentType)
		copy(dAtA[i:], m.ComponentType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ComponentId) > 0 {
		i -= len(m.ComponentId)
		copy(dAtA[i:], m.ComponentId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventComponentVerified) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventComponentVerified) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventComponentVerified) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Verifier) > 0 {
		i -= len(m.Verifier)
		copy(dAtA[i:], m.Verifier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Verifier)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ComponentId) > 0 {
		i -= len(m.ComponentId)
		copy(dAtA[i:], m.ComponentId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventAuthorizationUpdated) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventAuthorizationUpdated) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventAuthorizationUpdated) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Updater) > 0 {
		i -= len(m.Updater)
		copy(dAtA[i:], m.Updater)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Updater)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ComponentId) > 0 {
		i -= len(m.ComponentId)
		copy(dAtA[i:], m.ComponentId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventAnonymousComponentRegistered) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventAnonymousComponentRegistered) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventAnonymousComponentRegistered) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ManufacturerHash) > 0 {
		i -= len(m.ManufacturerHash)
		copy(dAtA[i:], m.ManufacturerHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ManufacturerHash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CategoryHash) > 0 {
		i -= len(m.CategoryHash)
		copy(dAtA[i:], m.CategoryHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CategoryHash)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ComponentHash) > 0 {
		i -= len(m.ComponentHash)
		copy(dAtA[i:], m.ComponentHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventAnonymousPairingAuthorized) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventAnonymousPairingAuthorized) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventAnonymousPairingAuthorized) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ComponentHashB) > 0 {
		i -= len(m.ComponentHashB)
		copy(dAtA[i:], m.ComponentHashB)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentHashB)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ComponentHashA) > 0 {
		i -= len(m.ComponentHashA)
		copy(dAtA[i:], m.ComponentHashA)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentHashA)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AuthId) > 0 {
		i -= len(m.AuthId)
		copy(dAtA[i:], m.AuthId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuthId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventAnonymousRevocationCreated) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventAnonymousRevocationCreated) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventAnonymousRevocationCreated) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.UrgencyLevel) > 0 {
		i -= len(m.UrgencyLevel)
		copy(dAtA[i:], m.UrgencyLevel)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UrgencyLevel)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RevocationType) > 0 {
		i -= len(m.RevocationType)
		copy(dAtA[i:], m.RevocationType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RevocationType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TargetHash) > 0 {
		i -= len(m.TargetHash)
		copy(dAtA[i:], m.TargetHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TargetHash)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RevocationId) > 0 {
		i -= len(m.RevocationId)
		copy(dAtA[i:], m.RevocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RevocationId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRegisterComponent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ManufacturerData)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterComponentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ComponentIdentity)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LctId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AuthRules)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateAuthorizationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgVerifyComponent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgVerifyComponentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsValid {
		n += 2
	}
	l = len(m.ComponentData)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterAnonymousComponent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RealComponentId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ManufacturerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Context)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterAnonymousComponentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ComponentHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ManufacturerHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CategoryHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TrustAnchor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgVerifyComponentPairingWithHashes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Verifier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentHashA)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentHashB)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Context)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgVerifyComponentPairingWithHashesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CanPair {
		n += 2
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TrustScore)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateAnonymousPairingAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentHashA)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentHashB)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RuleHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TrustScoreRequirement)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AuthorizationLevel)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateAnonymousPairingAuthorizationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AuthId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ExpiresAt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateAnonymousRevocationEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TargetHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RevocationType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UrgencyLevel)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReasonCategory)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Context)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateAnonymousRevocationEventResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RevocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EffectiveAt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGetAnonymousComponentMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Requester)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGetAnonymousComponentMetadataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ComponentHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TrustAnchor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LastVerified)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *EventComponentRegistered) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ComponentId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ManufacturerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *EventComponentVerified) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ComponentId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Verifier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *EventAuthorizationUpdated) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ComponentId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Updater)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *EventAnonymousComponentRegistered) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ComponentHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CategoryHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ManufacturerHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *EventAnonymousPairingAuthorized) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AuthId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentHashA)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentHashB)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *EventAnonymousRevocationCreated) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RevocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TargetHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RevocationType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UrgencyLevel)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterComponent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterComponent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterComponent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManufacturerData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ManufacturerData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterComponentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterComponentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterComponentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentIdentity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentIdentity = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LctId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LctId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthRules", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthRules = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAuthorizationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAuthorizationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAuthorizationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVerifyComponent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVerifyComponent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVerifyComponent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVerifyComponentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVerifyComponentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVerifyComponentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsValid", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsValid = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterAnonymousComponent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterAnonymousComponent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterAnonymousComponent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RealComponentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RealComponentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManufacturerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ManufacturerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Context", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Context = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterAnonymousComponentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterAnonymousComponentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterAnonymousComponentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManufacturerHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ManufacturerHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CategoryHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrustAnchor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrustAnchor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVerifyComponentPairingWithHashes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVerifyComponentPairingWithHashes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVerifyComponentPairingWithHashes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Verifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentHashA", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentHashA = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentHashB", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentHashB = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Context", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Context = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVerifyComponentPairingWithHashesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVerifyComponentPairingWithHashesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVerifyComponentPairingWithHashesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanPair", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanPair = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrustScore", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrustScore = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAnonymousPairingAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAnonymousPairingAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAnonymousPairingAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentHashA", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentHashA = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentHashB", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentHashB = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RuleHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RuleHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrustScoreRequirement", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrustScoreRequirement = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorizationLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAnonymousPairingAuthorizationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAnonymousPairingAuthorizationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAnonymousPairingAuthorizationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExpiresAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAnonymousRevocationEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAnonymousRevocationEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAnonymousRevocationEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RevocationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RevocationType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UrgencyLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UrgencyLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReasonCategory", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReasonCategory = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Context", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Context = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAnonymousRevocationEventResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAnonymousRevocationEventResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAnonymousRevocationEventResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RevocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RevocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EffectiveAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EffectiveAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGetAnonymousComponentMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGetAnonymousComponentMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGetAnonymousComponentMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Requester", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Requester = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGetAnonymousComponentMetadataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGetAnonymousComponentMetadataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGetAnonymousComponentMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrustAnchor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrustAnchor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastVerified", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastVerified = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventComponentRegistered) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventComponentRegistered: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventComponentRegistered: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManufacturerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ManufacturerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventComponentVerified) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventComponentVerified: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventComponentVerified: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Verifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventAuthorizationUpdated) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventAuthorizationUpdated: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventAuthorizationUpdated: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Updater", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Updater = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventAnonymousComponentRegistered) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventAnonymousComponentRegistered: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventAnonymousComponentRegistered: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CategoryHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManufacturerHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ManufacturerHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventAnonymousPairingAuthorized) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventAnonymousPairingAuthorized: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventAnonymousPairingAuthorized: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentHashA", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentHashA = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentHashB", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentHashB = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventAnonymousRevocationCreated) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventAnonymousRevocationCreated: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventAnonymousRevocationCreated: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RevocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RevocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RevocationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RevocationType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UrgencyLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UrgencyLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
